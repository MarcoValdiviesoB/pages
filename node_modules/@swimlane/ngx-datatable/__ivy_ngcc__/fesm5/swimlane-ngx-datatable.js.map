{"version":3,"file":"swimlane-ngx-datatable.js","sources":["ng:/@swimlane/ngx-datatable/lib/services/scrollbar-helper.service.ts","ng:/@swimlane/ngx-datatable/lib/services/dimensions-helper.service.ts","ng:/@swimlane/ngx-datatable/lib/services/column-changes.service.ts","ng:/@swimlane/ngx-datatable/lib/components/footer/footer-template.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/visibility.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/draggable.directive.ts","ng:/@swimlane/ngx-datatable/lib/events.ts","ng:/@swimlane/ngx-datatable/lib/directives/resizeable.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/orderable.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/long-press.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/body/scroller.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-group-header-template.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-group-header.directive.ts","ng:/@swimlane/ngx-datatable/lib/utils/column-prop-getters.ts","ng:/@swimlane/ngx-datatable/lib/utils/tree.ts","ng:/@swimlane/ngx-datatable/lib/utils/camel-case.ts","ng:/@swimlane/ngx-datatable/lib/utils/id.ts","ng:/@swimlane/ngx-datatable/lib/utils/column-helper.ts","ng:/@swimlane/ngx-datatable/lib/types/column-mode.type.ts","ng:/@swimlane/ngx-datatable/lib/types/selection.type.ts","ng:/@swimlane/ngx-datatable/lib/types/sort.type.ts","ng:/@swimlane/ngx-datatable/lib/types/contextmenu.type.ts","ng:/@swimlane/ngx-datatable/lib/components/columns/column-header.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/columns/column-cell.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/columns/tree.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/columns/column.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/row-detail/row-detail-template.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/row-detail/row-detail.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/footer/footer.directive.ts","ng:/@swimlane/ngx-datatable/lib/utils/column.ts","ng:/@swimlane/ngx-datatable/lib/utils/row-height-cache.ts","ng:/@swimlane/ngx-datatable/lib/utils/prefixes.ts","ng:/@swimlane/ngx-datatable/lib/utils/translate.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body.component.ts","ng:/@swimlane/ngx-datatable/lib/components/header/header.component.ts","ng:/@swimlane/ngx-datatable/lib/utils/throttle.ts","ng:/@swimlane/ngx-datatable/lib/utils/math.ts","ng:/@swimlane/ngx-datatable/lib/types/sort-direction.type.ts","ng:/@swimlane/ngx-datatable/lib/utils/sort.ts","ng:/@swimlane/ngx-datatable/lib/components/datatable.component.ts","ng:/@swimlane/ngx-datatable/lib/components/header/header-cell.component.ts","ng:/@swimlane/ngx-datatable/lib/components/footer/footer.component.ts","ng:/@swimlane/ngx-datatable/lib/components/footer/pager.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/progress-bar.component.ts","ng:/@swimlane/ngx-datatable/lib/utils/keys.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-row.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-row-wrapper.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-cell.component.ts","ng:/@swimlane/ngx-datatable/lib/utils/selection.ts","ng:/@swimlane/ngx-datatable/lib/components/body/selection.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/summary/summary-row.component.ts","ng:/@swimlane/ngx-datatable/lib/ngx-datatable.module.ts","ng:/@swimlane/ngx-datatable/lib/types/click.type.ts","ng:/@swimlane/ngx-datatable/lib/types/table-column.type.ts","ng:/@swimlane/ngx-datatable/lib/types/sort-prop-dir.type.ts","ng:/@swimlane/ngx-datatable/lib/utils/elm-from-point.ts"],"names":["tslib_1.__values","tslib_1.__decorate"],"mappings":"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","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class ScrollbarHelper {\n  width: number = this.getWidth();\n\n  constructor(@Inject(DOCUMENT) private document: any) {}\n\n  getWidth(): number {\n    const outer = this.document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar';\n    this.document.body.appendChild(outer);\n\n    const widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = 'scroll';\n\n    const inner = this.document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n\n    const widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class DimensionsHelper {\n  getDimensions(element: Element): ClientRect {\n    return element.getBoundingClientRect();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\n@Injectable()\nexport class ColumnChangesService {\n  private columnInputChanges = new Subject<undefined>();\n\n  get columnInputChanges$(): Observable<undefined> {\n    return this.columnInputChanges.asObservable();\n  }\n\n  onInputChange(): void {\n    this.columnInputChanges.next();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-footer-template]' })\nexport class DataTableFooterTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, Output, EventEmitter, ElementRef, HostBinding, NgZone, OnInit, OnDestroy } from '@angular/core';\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\n@Directive({ selector: '[visibilityObserver]' })\nexport class VisibilityDirective implements OnInit, OnDestroy {\n  @HostBinding('class.visible')\n  isVisible: boolean = false;\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n\n  constructor(private element: ElementRef, private zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.runCheck();\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 50);\n        });\n      }\n    };\n\n    this.timeout = setTimeout(() => check());\n  }\n}\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouseEvent } from '../events';\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n@Directive({ selector: '[draggable]' })\nexport class DraggableDirective implements OnDestroy, OnChanges {\n  @Input() dragEventTarget: any;\n  @Input() dragModel: any;\n  @Input() dragX: boolean = true;\n  @Input() dragY: boolean = true;\n\n  @Output() dragStart: EventEmitter<any> = new EventEmitter();\n  @Output() dragging: EventEmitter<any> = new EventEmitter();\n  @Output() dragEnd: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  isDragging: boolean = false;\n  subscription: Subscription;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n      this.onMousedown(changes['dragEventTarget'].currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  onMouseup(event: MouseEvent): void {\n    if (!this.isDragging) return;\n\n    this.isDragging = false;\n    this.element.classList.remove('dragging');\n\n    if (this.subscription) {\n      this._destroySubscription();\n      this.dragEnd.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  onMousedown(event: MouseEvent): void {\n    // we only want to drag the inner header text\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\n\n    if (isDragElm && (this.dragX || this.dragY)) {\n      event.preventDefault();\n      this.isDragging = true;\n\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup(ev));\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((ev: MouseEvent) => this.move(ev, mouseDownPos));\n\n      this.subscription.add(mouseMoveSub);\n\n      this.dragStart.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  move(event: MouseEvent, mouseDownPos: { x: number; y: number }): void {\n    if (!this.isDragging) return;\n\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n\n    if (this.dragX) this.element.style.left = `${x}px`;\n    if (this.dragY) this.element.style.top = `${y}px`;\n\n    this.element.classList.add('dragging');\n\n    this.dragging.emit({\n      event,\n      element: this.element,\n      model: this.dragModel\n    });\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","declare let global: any;\n\n/* tslint:disable */\nexport const MouseEvent = (((typeof window !== 'undefined' && window) as any) || (global as any))\n  .MouseEvent as MouseEvent;\nexport const KeyboardEvent = (((typeof window !== 'undefined' && window) as any) || (global as any))\n  .KeyboardEvent as KeyboardEvent;\nexport const Event = (((typeof window !== 'undefined' && window) as any) || (global as any)).Event as Event;\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  AfterViewInit,\n  Renderer2\n} from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { MouseEvent } from '../events';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[resizeable]',\n  host: {\n    '[class.resizeable]': 'resizeEnabled'\n  }\n})\nexport class ResizeableDirective implements OnDestroy, AfterViewInit {\n  @Input() resizeEnabled: boolean = true;\n  @Input() minWidth: number;\n  @Input() maxWidth: number;\n\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  subscription: Subscription;\n  resizing: boolean = false;\n  private resizeHandle: HTMLElement;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    const renderer2 = this.renderer;\n    this.resizeHandle = renderer2.createElement('span');\n    if (this.resizeEnabled) {\n      renderer2.addClass(this.resizeHandle, 'resize-handle');\n    } else {\n      renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n    }\n    renderer2.appendChild(this.element, this.resizeHandle);\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n    if (this.renderer.destroyNode) {\n      this.renderer.destroyNode(this.resizeHandle);\n    } else {\n      this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n    }\n  }\n\n  onMouseup(): void {\n    this.resizing = false;\n\n    if (this.subscription && !this.subscription.closed) {\n      this._destroySubscription();\n      this.resize.emit(this.element.clientWidth);\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent): void {\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\n    const initialWidth = this.element.clientWidth;\n    const mouseDownScreenX = event.screenX;\n\n    if (isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX));\n\n      this.subscription.add(mouseMoveSub);\n    }\n  }\n\n  move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\n    const movementX = event.screenX - mouseDownScreenX;\n    const newWidth = initialWidth + movementX;\n\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n    if (overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n\n  private _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  KeyValueDiffers,\n  AfterContentInit,\n  OnDestroy,\n  Inject\n} from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({ selector: '[orderable]' })\nexport class OrderableDirective implements AfterContentInit, OnDestroy {\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() targetChanged: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(DraggableDirective, { descendants: true })\n  draggables: QueryList<DraggableDirective>;\n\n  positions: any;\n  differ: any;\n  lastDraggingIndex: number;\n\n  constructor(differs: KeyValueDiffers, @Inject(DOCUMENT) private document: any) {\n    this.differ = differs.find({}).create();\n  }\n\n  ngAfterContentInit(): void {\n    // HACK: Investigate Better Way\n    this.updateSubscriptions();\n    this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.draggables.forEach(d => {\n      d.dragStart.unsubscribe();\n      d.dragging.unsubscribe();\n      d.dragEnd.unsubscribe();\n    });\n  }\n\n  updateSubscriptions(): void {\n    const diffs = this.differ.diff(this.createMapDiffs());\n\n    if (diffs) {\n      const subscribe = ({ currentValue, previousValue }: any) => {\n        unsubscribe({ previousValue });\n\n        if (currentValue) {\n          currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n          currentValue.dragging.subscribe(this.onDragging.bind(this));\n          currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n        }\n      };\n\n      const unsubscribe = ({ previousValue }: any) => {\n        if (previousValue) {\n          previousValue.dragStart.unsubscribe();\n          previousValue.dragging.unsubscribe();\n          previousValue.dragEnd.unsubscribe();\n        }\n      };\n\n      diffs.forEachAddedItem(subscribe);\n      // diffs.forEachChangedItem(subscribe.bind(this));\n      diffs.forEachRemovedItem(unsubscribe);\n    }\n  }\n\n  onDragStart(): void {\n    this.positions = {};\n\n    let i = 0;\n    for (const dragger of this.draggables.toArray()) {\n      const elm = dragger.element;\n      const left = parseInt(elm.offsetLeft.toString(), 0);\n      this.positions[dragger.dragModel.prop] = {\n        left,\n        right: left + parseInt(elm.offsetWidth.toString(), 0),\n        index: i++,\n        element: elm\n      };\n    }\n  }\n\n  onDragging({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n    const target = this.isTarget(model, event);\n\n    if (target) {\n      if (this.lastDraggingIndex !== target.i) {\n        this.targetChanged.emit({\n          prevIndex: this.lastDraggingIndex,\n          newIndex: target.i,\n          initialIndex: prevPos.index\n        });\n        this.lastDraggingIndex = target.i;\n      }\n    } else if (this.lastDraggingIndex !== prevPos.index) {\n      this.targetChanged.emit({\n        prevIndex: this.lastDraggingIndex,\n        initialIndex: prevPos.index\n      });\n      this.lastDraggingIndex = prevPos.index;\n    }\n  }\n\n  onDragEnd({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n\n    const target = this.isTarget(model, event);\n    if (target) {\n      this.reorder.emit({\n        prevIndex: prevPos.index,\n        newIndex: target.i,\n        model\n      });\n    }\n\n    this.lastDraggingIndex = undefined;\n    element.style.left = 'auto';\n  }\n\n  isTarget(model: any, event: any): any {\n    let i = 0;\n    const x = event.x || event.clientX;\n    const y = event.y || event.clientY;\n    const targets = this.document.elementsFromPoint(x, y);\n\n    for (const prop in this.positions) {\n      // current column position which throws event.\n      const pos = this.positions[prop];\n\n      // since we drag the inner span, we need to find it in the elements at the cursor\n      if (model.prop !== prop && targets.find((el: any) => el === pos.element)) {\n        return {\n          pos,\n          i\n        };\n      }\n\n      i++;\n    }\n  }\n\n  private createMapDiffs(): { [key: string]: DraggableDirective } {\n    return this.draggables.toArray().reduce((acc, curr) => {\n      acc[curr.dragModel.$$id] = curr;\n      return acc;\n    }, {});\n  }\n}\n","import { Directive, Input, Output, EventEmitter, HostBinding, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouseEvent } from '../events';\n\n@Directive({ selector: '[long-press]' })\nexport class LongPressDirective implements OnDestroy {\n  @Input() pressEnabled: boolean = true;\n  @Input() pressModel: any;\n  @Input() duration: number = 500;\n\n  @Output() longPressStart: EventEmitter<any> = new EventEmitter();\n  @Output() longPressing: EventEmitter<any> = new EventEmitter();\n  @Output() longPressEnd: EventEmitter<any> = new EventEmitter();\n\n  pressing: boolean;\n  isLongPressing: boolean;\n  timeout: any;\n  mouseX: number = 0;\n  mouseY: number = 0;\n\n  subscription: Subscription;\n\n  @HostBinding('class.press')\n  get press(): boolean {\n    return this.pressing;\n  }\n\n  @HostBinding('class.longpress')\n  get isLongPress(): boolean {\n    return this.isLongPressing;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: MouseEvent): void {\n    // don't do right/middle clicks\n    if (event.which !== 1 || !this.pressEnabled) return;\n\n    // don't start drag if its on resize handle\n    const target = <HTMLElement>event.target;\n    if (target.classList.contains('resize-handle')) return;\n\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n\n    this.pressing = true;\n    this.isLongPressing = false;\n\n    const mouseup = fromEvent(document, 'mouseup');\n    this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n    this.timeout = setTimeout(() => {\n      this.isLongPressing = true;\n      this.longPressStart.emit({\n        event,\n        model: this.pressModel\n      });\n\n      this.subscription.add(\n        fromEvent(document, 'mousemove')\n          .pipe(takeUntil(mouseup))\n          .subscribe((mouseEvent: MouseEvent) => this.onMouseMove(mouseEvent))\n      );\n\n      this.loop(event);\n    }, this.duration);\n\n    this.loop(event);\n  }\n\n  onMouseMove(event: MouseEvent): void {\n    if (this.pressing && !this.isLongPressing) {\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n\n      if (xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n\n  loop(event: MouseEvent): void {\n    if (this.isLongPressing) {\n      this.timeout = setTimeout(() => {\n        this.longPressing.emit({\n          event,\n          model: this.pressModel\n        });\n        this.loop(event);\n      }, 50);\n    }\n  }\n\n  endPress(): void {\n    clearTimeout(this.timeout);\n    this.isLongPressing = false;\n    this.pressing = false;\n    this._destroySubscription();\n\n    this.longPressEnd.emit({\n      model: this.pressModel\n    });\n  }\n\n  onMouseup(): void {\n    this.endPress();\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  Output,\n  EventEmitter,\n  Renderer2,\n  NgZone,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'datatable-scroller',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    class: 'datatable-scroll'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScrollerComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean = false;\n  @Input() scrollbarH: boolean = false;\n\n  @HostBinding('style.height.px')\n  @Input()\n  scrollHeight: number;\n\n  @HostBinding('style.width.px')\n  @Input()\n  scrollWidth: number;\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  scrollYPos: number = 0;\n  scrollXPos: number = 0;\n  prevScrollYPos: number = 0;\n  prevScrollXPos: number = 0;\n  element: any;\n  parentElement: any;\n  onScrollListener: any;\n\n  private _scrollEventListener: any = null;\n\n  constructor(private ngZone: NgZone, element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // manual bind so we don't always listen\n    if (this.scrollbarV || this.scrollbarH) {\n      const renderer = this.renderer;\n      this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n      this._scrollEventListener = this.onScrolled.bind(this);\n      this.parentElement.addEventListener('scroll', this._scrollEventListener);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._scrollEventListener) {\n      this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n      this._scrollEventListener = null;\n    }\n  }\n\n  setOffset(offsetY: number): void {\n    if (this.parentElement) {\n      this.parentElement.scrollTop = offsetY;\n    }\n  }\n\n  onScrolled(event: MouseEvent): void {\n    const dom: Element = <Element>event.currentTarget;\n    requestAnimationFrame(() => {\n      this.scrollYPos = dom.scrollTop;\n      this.scrollXPos = dom.scrollLeft;\n      this.updateOffset();\n    });\n  }\n\n  updateOffset(): void {\n    let direction: string;\n    if (this.scrollYPos < this.prevScrollYPos) {\n      direction = 'down';\n    } else if (this.scrollYPos > this.prevScrollYPos) {\n      direction = 'up';\n    }\n\n    this.scroll.emit({\n      direction,\n      scrollYPos: this.scrollYPos,\n      scrollXPos: this.scrollXPos\n    });\n\n    this.prevScrollYPos = this.scrollYPos;\n    this.prevScrollXPos = this.scrollXPos;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-group-header-template]'\n})\nexport class DatatableGroupHeaderTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableGroupHeaderTemplateDirective } from './body-group-header-template.directive';\n\n@Directive({ selector: 'ngx-datatable-group-header' })\nexport class DatatableGroupHeaderDirective {\n  /**\n   * Row height is required when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((group?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Track toggling of group visibility\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of a group\n   */\n  toggleExpandGroup(group: any): void {\n    this.toggle.emit({\n      type: 'group',\n      value: group\n    });\n  }\n\n  /**\n   * Expand all groups\n   */\n  expandAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * Collapse all groups\n   */\n  collapseAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { TableColumnProp } from '../types/table-column.type';\n\n// maybe rename this file to prop-getters.ts\n\nexport type ValueGetter = (obj: any, prop: TableColumnProp) => any;\n\n/**\n * Always returns the empty string ''\n */\nexport function emptyStringGetter(): string {\n  return '';\n}\n\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\n  if (prop == null) {\n    return emptyStringGetter;\n  }\n\n  if (typeof prop === 'number') {\n    return numericIndexGetter;\n  } else {\n    // deep or simple\n    if (prop.indexOf('.') !== -1) {\n      return deepValueGetter;\n    } else {\n      return shallowValueGetter;\n    }\n  }\n}\n\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\nexport function numericIndexGetter(row: any[], index: number): any {\n  if (row == null) {\n    return '';\n  }\n  // mimic behavior of deepValueGetter\n  if (!row || index == null) {\n    return row;\n  }\n\n  const value = row[index];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\nexport function shallowValueGetter(obj: any, fieldName: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !fieldName) {\n    return obj;\n  }\n\n  const value = obj[fieldName];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\nexport function deepValueGetter(obj: any, path: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !path) {\n    return obj;\n  }\n\n  // check if path matches a root-level field\n  // { \"a.b.c\": 123 }\n  let current = obj[path];\n  if (current !== undefined) {\n    return current;\n  }\n\n  current = obj;\n  const split = path.split('.');\n\n  if (split.length) {\n    for (let i = 0; i < split.length; i++) {\n      current = current[split[i]];\n\n      // if found undefined, return empty string\n      if (current === undefined || current === null) {\n        return '';\n      }\n    }\n  }\n\n  return current;\n}\n","import { getterForProp } from './column-prop-getters';\nimport { TableColumnProp } from '../types/table-column.type';\n\nexport type OptionalValueGetter = (row: any) => any | undefined;\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\n  return prop && (row => getterForProp(prop)(row, prop));\n}\n\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\nexport function groupRowsByParents(rows: any[], from?: OptionalValueGetter, to?: OptionalValueGetter): any[] {\n  if (from && to) {\n    const nodeById = {};\n    const l = rows.length;\n    let node: TreeNode | null = null;\n\n    nodeById[0] = new TreeNode(); // that's the root node\n\n    const uniqIDs = rows.reduce((arr, item) => {\n      const toValue = to(item);\n      if (arr.indexOf(toValue) === -1) {\n        arr.push(toValue);\n      }\n      return arr;\n    }, []);\n\n    for (let i = 0; i < l; i++) {\n      // make TreeNode objects for each item\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\n    }\n\n    for (let i = 0; i < l; i++) {\n      // link all TreeNode objects\n      node = nodeById[to(rows[i])];\n      let parent = 0;\n      const fromValue = from(node.row);\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n        parent = fromValue;\n      }\n      node.parent = nodeById[parent];\n      node.row['level'] = node.parent.row['level'] + 1;\n      node.parent.children.push(node);\n    }\n\n    let resolvedRows: any[] = [];\n    nodeById[0].flatten(function() {\n      resolvedRows = [...resolvedRows, this.row];\n    }, true);\n\n    return resolvedRows;\n  } else {\n    return rows;\n  }\n}\n\nclass TreeNode {\n  public row: any;\n  public parent: any;\n  public children: any[];\n\n  constructor(row: any | null = null) {\n    if (!row) {\n      row = {\n        level: -1,\n        treeStatus: 'expanded'\n      };\n    }\n    this.row = row;\n    this.parent = null;\n    this.children = [];\n  }\n\n  flatten(f: any, recursive: boolean) {\n    if (this.row['treeStatus'] === 'expanded') {\n      for (let i = 0, l = this.children.length; i < l; i++) {\n        const child = this.children[i];\n        f.apply(child, Array.prototype.slice.call(arguments, 2));\n        if (recursive) child.flatten.apply(child, arguments);\n      }\n    }\n  }\n}\n","/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\nexport function camelCase(str: string): string {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n\n  // Lower case first character and some other stuff\n  str = str\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n    .trim()\n    .toLowerCase();\n\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function(a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n\n  return str;\n}\n\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\nexport function deCamelCase(str: string): string {\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\n}\n","/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nexport function id() {\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n","import { camelCase, deCamelCase } from './camel-case';\nimport { id } from './id';\nimport { getterForProp } from './column-prop-getters';\nimport { TableColumn } from '../types/table-column.type';\nimport { DataTableColumnDirective } from '../components/columns/column.directive';\n\n/**\n * Sets the column defaults\n */\nexport function setColumnDefaults(columns: TableColumn[]) {\n  if (!columns) return;\n\n  // Only one column should hold the tree view\n  // Thus if multiple columns are provided with\n  // isTreeColumn as true we take only the first one\n  let treeColumnFound: boolean = false;\n\n  for (const column of columns) {\n    if (!column.$$id) {\n      column.$$id = id();\n    }\n\n    // prop can be numeric; zero is valid not a missing prop\n    // translate name => prop\n    if (isNullOrUndefined(column.prop) && column.name) {\n      column.prop = camelCase(column.name);\n    }\n\n    if (!column.$$valueGetter) {\n      column.$$valueGetter = getterForProp(column.prop);\n    }\n\n    // format props if no name passed\n    if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = deCamelCase(String(column.prop));\n    }\n\n    if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = ''; // Fixes IE and Edge displaying `null`\n    }\n\n    if (!column.hasOwnProperty('resizeable')) {\n      column.resizeable = true;\n    }\n\n    if (!column.hasOwnProperty('sortable')) {\n      column.sortable = true;\n    }\n\n    if (!column.hasOwnProperty('draggable')) {\n      column.draggable = true;\n    }\n\n    if (!column.hasOwnProperty('canAutoResize')) {\n      column.canAutoResize = true;\n    }\n\n    if (!column.hasOwnProperty('width')) {\n      column.width = 150;\n    }\n\n    if (!column.hasOwnProperty('isTreeColumn')) {\n      column.isTreeColumn = false;\n    } else {\n      if (column.isTreeColumn && !treeColumnFound) {\n        // If the first column with isTreeColumn is true found\n        // we mark that treeCoulmn is found\n        treeColumnFound = true;\n      } else {\n        // After that isTreeColumn property for any other column\n        // will be set as false\n        column.isTreeColumn = false;\n      }\n    }\n  }\n}\n\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Translates templates definitions to objects\n */\nexport function translateTemplates(templates: DataTableColumnDirective[]): any[] {\n  const result: any[] = [];\n  for (const temp of templates) {\n    const col: any = {};\n\n    const props = Object.getOwnPropertyNames(temp);\n    for (const prop of props) {\n      col[prop] = temp[prop];\n    }\n\n    if (temp.headerTemplate) {\n      col.headerTemplate = temp.headerTemplate;\n    }\n\n    if (temp.cellTemplate) {\n      col.cellTemplate = temp.cellTemplate;\n    }\n\n    if (temp.summaryFunc) {\n      col.summaryFunc = temp.summaryFunc;\n    }\n\n    if (temp.summaryTemplate) {\n      col.summaryTemplate = temp.summaryTemplate;\n    }\n\n    result.push(col);\n  }\n\n  return result;\n}\n","export enum ColumnMode {\n  standard = 'standard',\n  flex = 'flex',\n  force = 'force'\n}\n","export enum SelectionType {\n  single = 'single',\n  multi = 'multi',\n  multiClick = 'multiClick',\n  cell = 'cell',\n  checkbox = 'checkbox'\n}\n","export enum SortType {\n  single = 'single',\n  multi = 'multi'\n}\n","export enum ContextmenuType {\n  header = 'header',\n  body = 'body'\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-header-template]' })\nexport class DataTableColumnHeaderDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-cell-template]' })\nexport class DataTableColumnCellDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-tree-toggle]' })\nexport class DataTableColumnCellTreeToggle {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef, ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DataTableColumnHeaderDirective } from './column-header.directive';\nimport { DataTableColumnCellDirective } from './column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './tree.directive';\nimport { ColumnChangesService } from '../../services/column-changes.service';\nimport { TableColumnProp } from '../../types/table-column.type';\n\n@Directive({ selector: 'ngx-datatable-column' })\nexport class DataTableColumnDirective implements OnChanges {\n  @Input() name: string;\n  @Input() prop: TableColumnProp;\n  @Input() frozenLeft: any;\n  @Input() frozenRight: any;\n  @Input() flexGrow: number;\n  @Input() resizeable: boolean;\n  @Input() comparator: any;\n  @Input() pipe: any;\n  @Input() sortable: boolean;\n  @Input() draggable: boolean;\n  @Input() canAutoResize: boolean;\n  @Input() minWidth: number;\n  @Input() width: number;\n  @Input() maxWidth: number;\n  @Input() checkboxable: boolean;\n  @Input() headerCheckboxable: boolean;\n  @Input() headerClass: string | ((data: any) => string | any);\n  @Input() cellClass: string | ((data: any) => string | any);\n  @Input() isTreeColumn: boolean;\n  @Input() treeLevelIndent: number;\n  @Input() summaryFunc: (cells: any[]) => any;\n  @Input() summaryTemplate: TemplateRef<any>;\n\n  @Input('cellTemplate')\n  _cellTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellDirective, { read: TemplateRef, static: true })\n  _cellTemplateQuery: TemplateRef<any>;\n\n  get cellTemplate(): TemplateRef<any> {\n    return this._cellTemplateInput || this._cellTemplateQuery;\n  }\n\n  @Input('headerTemplate')\n  _headerTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnHeaderDirective, { read: TemplateRef, static: true })\n  _headerTemplateQuery: TemplateRef<any>;\n\n  get headerTemplate(): TemplateRef<any> {\n    return this._headerTemplateInput || this._headerTemplateQuery;\n  }\n\n  @Input('treeToggleTemplate')\n  _treeToggleTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellTreeToggle, { read: TemplateRef, static: true })\n  _treeToggleTemplateQuery: TemplateRef<any>;\n\n  get treeToggleTemplate(): TemplateRef<any> {\n    return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n  }\n\n  private isFirstChange = true;\n\n  constructor(private columnChangesService: ColumnChangesService) {}\n\n  ngOnChanges() {\n    if (this.isFirstChange) {\n      this.isFirstChange = false;\n    } else {\n      this.columnChangesService.onInputChange();\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-row-detail-template]'\n})\nexport class DatatableRowDetailTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableRowDetailTemplateDirective } from './row-detail-template.directive';\n\n@Directive({ selector: 'ngx-datatable-row-detail' })\nexport class DatatableRowDetailDirective {\n  /**\n   * The detail row height is required especially\n   * when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((row?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Row detail row visbility was toggled.\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of the row\n   */\n  toggleExpandRow(row: any): void {\n    this.toggle.emit({\n      type: 'row',\n      value: row\n    });\n  }\n\n  /**\n   * API method to expand all the rows.\n   */\n  expandAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * API method to collapse all the rows.\n   */\n  collapseAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DataTableFooterTemplateDirective } from './footer-template.directive';\n\n@Directive({ selector: 'ngx-datatable-footer' })\nexport class DatatableFooterDirective {\n  @Input() footerHeight: number;\n  @Input() totalMessage: string;\n  @Input() selectedMessage: string | boolean;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableFooterTemplateDirective, { read: TemplateRef, static: false })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n}\n","/**\n * Returns the columns by pin.\n */\nexport function columnsByPin(cols: any[]) {\n  const ret: { left: any; center: any; right: any } = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if (cols) {\n    for (const col of cols) {\n      if (col.frozenLeft) {\n        ret.left.push(col);\n      } else if (col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Returns the widths of all group sets of a column\n */\nexport function columnGroupWidths(groups: any, all: any) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: Math.floor(columnTotalWidth(all))\n  };\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnTotalWidth(columns: any[], prop?: string) {\n  let totalWidth = 0;\n\n  if (columns) {\n    for (const c of columns) {\n      const has = prop && c[prop];\n      const width = has ? c[prop] : c.width;\n      totalWidth = totalWidth + parseFloat(width);\n    }\n  }\n\n  return totalWidth;\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnsTotalWidth(columns: any, prop?: any) {\n  let totalWidth = 0;\n\n  for (const column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n\n  return totalWidth;\n}\n\nexport function columnsByPinArr(val: any) {\n  const colsByPinArr = [];\n  const colsByPin = columnsByPin(val);\n\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n\n  return colsByPinArr;\n}\n","/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nexport class RowHeightCache {\n  /**\n   * Tree Array stores the cumulative information of the row heights to perform efficient\n   * range queries and updates.  Currently the tree is initialized to the base row\n   * height instead of the detail row height.\n   */\n  private treeArray: number[] = [];\n\n  /**\n   * Clear the Tree array.\n   */\n  clearCache(): void {\n    this.treeArray = [];\n  }\n\n  /**\n   * Initialize the Fenwick tree with row Heights.\n   *\n   * @param rows The array of rows which contain the expanded status.\n   * @param rowHeight The row height.\n   * @param detailRowHeight The detail row height.\n   */\n  initCache(details: any): void {\n    const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n    const isFn = typeof rowHeight === 'function';\n    const isDetailFn = typeof detailRowHeight === 'function';\n\n    if (!isFn && isNaN(rowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n    if (!isDetailFn && isNaN(detailRowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    const n = externalVirtual ? rowCount : rows.length;\n    this.treeArray = new Array(n);\n\n    for (let i = 0; i < n; ++i) {\n      this.treeArray[i] = 0;\n    }\n\n    for (let i = 0; i < n; ++i) {\n      const row = rows[i];\n      let currentRowHeight = rowHeight;\n      if (isFn) {\n        currentRowHeight = rowHeight(row);\n      }\n\n      // Add the detail row height to the already expanded rows.\n      // This is useful for the table that goes through a filter or sort.\n      const expanded = rowExpansions.has(row);\n      if (row && expanded) {\n        if (isDetailFn) {\n          const index = rowIndexes.get(row);\n          currentRowHeight += detailRowHeight(row, index);\n        } else {\n          currentRowHeight += detailRowHeight;\n        }\n      }\n\n      this.update(i, currentRowHeight);\n    }\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.  Below handles edge cases.\n   */\n  getRowIndex(scrollY: number): number {\n    if (scrollY === 0) return 0;\n    return this.calcRowIndex(scrollY);\n  }\n\n  /**\n   * When a row is expanded or rowHeight is changed, update the height.  This can\n   * be utilized in future when Angular Data table supports dynamic row heights.\n   */\n  update(atRowIndex: number, byRowHeight: number): void {\n    if (!this.treeArray.length) {\n      throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n    }\n\n    const n = this.treeArray.length;\n    atRowIndex |= 0;\n\n    while (atRowIndex < n) {\n      this.treeArray[atRowIndex] += byRowHeight;\n      atRowIndex |= atRowIndex + 1;\n    }\n  }\n\n  /**\n   * Range Sum query from 1 to the rowIndex\n   */\n  query(atIndex: number): number {\n    if (!this.treeArray.length) {\n      throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n    }\n\n    let sum = 0;\n    atIndex |= 0;\n\n    while (atIndex >= 0) {\n      sum += this.treeArray[atIndex];\n      atIndex = (atIndex & (atIndex + 1)) - 1;\n    }\n\n    return sum;\n  }\n\n  /**\n   * Find the total height between 2 row indexes\n   */\n  queryBetween(atIndexA: number, atIndexB: number): number {\n    return this.query(atIndexB) - this.query(atIndexA - 1);\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.\n   */\n  private calcRowIndex(sum: number): number {\n    if (!this.treeArray.length) return 0;\n\n    let pos = -1;\n    const dataLength = this.treeArray.length;\n\n    // Get the highest bit for the block size.\n    const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n\n    for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n      const nextPos = pos + blockSize;\n      if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n        sum -= this.treeArray[nextPos];\n        pos = nextPos;\n      }\n    }\n\n    return pos + 1;\n  }\n}\n","import { camelCase } from './camel-case';\n\nconst cache = {};\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = (function() {\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n  const match =\n    typeof styles !== 'undefined'\n      ? Array.prototype.slice\n          .call(styles)\n          .join('')\n          .match(/-(moz|webkit|ms)-/)\n      : null;\n  const pre = match !== null ? match[1] : undefined;\n  // tslint:disable-next-line: tsr-detect-non-literal-regexp\n  const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n\n  return dom\n    ? {\n        dom,\n        lowercase: pre,\n        css: `-${pre}-`,\n        js: pre[0].toUpperCase() + pre.substr(1)\n      }\n    : undefined;\n})();\n\nexport function getVendorPrefixedName(property: string) {\n  const name = camelCase(property);\n\n  if (!cache[name]) {\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if (testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n\n  return cache[name];\n}\n","import { getVendorPrefixedName } from './prefixes';\nimport { camelCase } from './camel-case';\n\n// browser detection and prefixing tools\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n\nexport function translateXY(styles: any, x: number, y: number) {\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n    }\n  } else {\n    styles.top = `${y}px`;\n    styles.left = `${x}px`;\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ScrollerComponent } from './scroller.component';\nimport { MouseEvent } from '../../events';\nimport { SelectionType } from '../../types/selection.type';\nimport { columnsByPin, columnGroupWidths } from '../../utils/column';\nimport { RowHeightCache } from '../../utils/row-height-cache';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'datatable-body'\n  }\n})\nexport class DataTableBodyComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean;\n  @Input() scrollbarH: boolean;\n  @Input() loadingIndicator: boolean;\n  @Input() externalPaging: boolean;\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number);\n  @Input() offsetX: number;\n  @Input() emptyMessage: string;\n  @Input() selectionType: SelectionType;\n  @Input() selected: any[] = [];\n  @Input() rowIdentity: any;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() selectCheck: any;\n  @Input() displayCheck: any;\n  @Input() trackByProp: string;\n  @Input() rowClass: any;\n  @Input() groupedRows: any;\n  @Input() groupExpansionDefault: boolean;\n  @Input() innerWidth: number;\n  @Input() groupRowsBy: string;\n  @Input() virtualization: boolean;\n  @Input() summaryRow: boolean;\n  @Input() summaryPosition: string;\n  @Input() summaryHeight: number;\n\n  @Input() set pageSize(val: number) {\n    this._pageSize = val;\n    this.recalcLayout();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  @Input() set rows(val: any[]) {\n    this._rows = val;\n    this.recalcLayout();\n  }\n\n  get rows(): any[] {\n    return this._rows;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set offset(val: number) {\n    this._offset = val;\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization))\n      this.recalcLayout();\n  }\n\n  get offset(): number {\n    return this._offset;\n  }\n\n  @Input() set rowCount(val: number) {\n    this._rowCount = val;\n    this.recalcLayout();\n  }\n\n  get rowCount(): number {\n    return this._rowCount;\n  }\n\n  @HostBinding('style.width')\n  get bodyWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  @Input()\n  @HostBinding('style.height')\n  set bodyHeight(val) {\n    if (this.scrollbarV) {\n      this._bodyHeight = val + 'px';\n    } else {\n      this._bodyHeight = 'auto';\n    }\n\n    this.recalcLayout();\n  }\n\n  get bodyHeight() {\n    return this._bodyHeight;\n  }\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n  @Output() page: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() detailToggle: EventEmitter<any> = new EventEmitter();\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(ScrollerComponent, { static: false }) scroller: ScrollerComponent;\n\n  /**\n   * Returns if selection is enabled.\n   */\n  get selectEnabled(): boolean {\n    return !!this.selectionType;\n  }\n\n  /**\n   * Property that would calculate the height of scroll bar\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n   * calculate scroll height automatically (as height will be undefined).\n   */\n  get scrollHeight(): number | undefined {\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\n      return this.rowHeightsCache.query(this.rowCount - 1);\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\n  temp: any[] = [];\n  offsetY = 0;\n  indexes: any = {};\n  columnGroupWidths: any;\n  columnGroupWidthsWithoutGroup: any;\n  rowTrackingFn: any;\n  listener: any;\n  rowIndexes: any = new Map();\n  rowExpansions: any[] = [];\n\n  _rows: any[];\n  _bodyHeight: any;\n  _columns: any[];\n  _rowCount: number;\n  _offset: number;\n  _pageSize: number;\n\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  constructor(private cd: ChangeDetectorRef) {\n    // declare fn here so we can get access to the `this` property\n    this.rowTrackingFn = (index: number, row: any): any => {\n      const idx = this.getRowIndex(row);\n      if (this.trackByProp) {\n        return row[this.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n\n  /**\n   * Called after the constructor, initializing input properties\n   */\n  ngOnInit(): void {\n    if (this.rowDetail) {\n      this.listener = this.rowDetail.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'row') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n\n    if (this.groupHeader) {\n      this.listener = this.groupHeader.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'group') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Called once, before the instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.rowDetail || this.groupHeader) {\n      this.listener.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates the Y offset given a new offset.\n   */\n  updateOffsetY(offset?: number): void {\n    // scroller is missing on empty table\n    if (!this.scroller) {\n      return;\n    }\n\n    if (this.scrollbarV && this.virtualization && offset) {\n      // First get the row Index that we need to move to.\n      const rowIndex = this.pageSize * offset;\n      offset = this.rowHeightsCache.query(rowIndex - 1);\n    } else if (this.scrollbarV && !this.virtualization) {\n      offset = 0;\n    }\n\n    this.scroller.setOffset(offset || 0);\n  }\n\n  /**\n   * Body was scrolled, this is mainly useful for\n   * when a user is server-side pagination via virtual scroll.\n   */\n  onBodyScroll(event: any): void {\n    const scrollYPos: number = event.scrollYPos;\n    const scrollXPos: number = event.scrollXPos;\n\n    // if scroll change, trigger update\n    // this is mainly used for header cell positions\n    if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n      this.scroll.emit({\n        offsetY: scrollYPos,\n        offsetX: scrollXPos\n      });\n    }\n\n    this.offsetY = scrollYPos;\n    this.offsetX = scrollXPos;\n\n    this.updateIndexes();\n    this.updatePage(event.direction);\n    this.updateRows();\n  }\n\n  /**\n   * Updates the page given a direction.\n   */\n  updatePage(direction: string): void {\n    let offset = this.indexes.first / this.pageSize;\n\n    if (direction === 'up') {\n      offset = Math.ceil(offset);\n    } else if (direction === 'down') {\n      offset = Math.floor(offset);\n    }\n\n    if (direction !== undefined && !isNaN(offset)) {\n      this.page.emit({ offset });\n    }\n  }\n\n  /**\n   * Updates the rows in the view port\n   */\n  updateRows(): void {\n    const { first, last } = this.indexes;\n    let rowIndex = first;\n    let idx = 0;\n    const temp: any[] = [];\n\n    this.rowIndexes.clear();\n\n    // if grouprowsby has been specified treat row paging\n    // parameters as group paging parameters ie if limit 10 has been\n    // specified treat it as 10 groups rather than 10 rows\n    if (this.groupedRows) {\n      let maxRowsPerGroup = 3;\n      // if there is only one group set the maximum number of\n      // rows per group the same as the total number of rows\n      if (this.groupedRows.length === 1) {\n        maxRowsPerGroup = this.groupedRows[0].value.length;\n      }\n\n      while (rowIndex < last && rowIndex < this.groupedRows.length) {\n        // Add the groups into this page\n        const group = this.groupedRows[rowIndex];\n        temp[idx] = group;\n        idx++;\n\n        // Group index in this context\n        rowIndex++;\n      }\n    } else {\n      while (rowIndex < last && rowIndex < this.rowCount) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n          this.rowIndexes.set(row, rowIndex);\n          temp[idx] = row;\n        }\n\n        idx++;\n        rowIndex++;\n      }\n    }\n\n    this.temp = temp;\n  }\n\n  /**\n   * Get the row height\n   */\n  getRowHeight(row: any): number {\n    // if its a function return it\n    if (typeof this.rowHeight === 'function') {\n      return this.rowHeight(row);\n    }\n\n    return this.rowHeight as number;\n  }\n\n  /**\n   * @param group the group with all rows\n   */\n  getGroupHeight(group: any): number {\n    let rowHeight = 0;\n\n    if (group.value) {\n      for (let index = 0; index < group.value.length; index++) {\n        rowHeight += this.getRowAndDetailHeight(group.value[index]);\n      }\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Calculate row height based on the expanded state of the row.\n   */\n  getRowAndDetailHeight(row: any): number {\n    let rowHeight = this.getRowHeight(row);\n    const expanded = this.getRowExpanded(row);\n\n    // Adding detail row height if its expanded.\n    if (expanded) {\n      rowHeight += this.getDetailRowHeight(row);\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Get the height of the detail row.\n   */\n  getDetailRowHeight = (row?: any, index?: any): number => {\n    if (!this.rowDetail) {\n      return 0;\n    }\n    const rowHeight = this.rowDetail.rowHeight;\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : (rowHeight as number);\n  };\n\n  /**\n   * Calculates the styles for the row so that the rows can be moved in 2D space\n   * during virtual scroll inside the DOM.   In the below case the Y position is\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n   * 100 px then following styles are generated:\n   *\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\n   *\n   * Row heights have to be calculated based on the row heights cache as we wont\n   * be able to determine which row is of what height before hand.  In the above\n   * case the positionY of the translate3d for row2 would be the sum of all the\n   * heights of the rows before it (i.e. row0 and row1).\n   *\n   * @param rows the row that needs to be placed in the 2D space.\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getRowsStyles(rows: any): any {\n    const styles: any = {};\n\n    // only add styles for the group if there is a group\n    if (this.groupedRows) {\n      styles.width = this.columnGroupWidths.total;\n    }\n\n    if (this.scrollbarV && this.virtualization) {\n      let idx = 0;\n\n      if (this.groupedRows) {\n        // Get the latest row rowindex in a group\n        const row = rows[rows.length - 1];\n        idx = row ? this.getRowIndex(row) : 0;\n      } else {\n        idx = this.getRowIndex(rows);\n      }\n\n      // const pos = idx * rowHeight;\n      // The position of this row would be the sum of all row heights\n      // until the previous row position.\n      const pos = this.rowHeightsCache.query(idx - 1);\n\n      translateXY(styles, 0, pos);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Calculate bottom summary row offset for scrollbar mode.\n   * For more information about cache and offset calculation\n   * see description for `getRowsStyles` method\n   *\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getBottomSummaryRowStyles(): any {\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\n      return null;\n    }\n\n    const styles = { position: 'absolute' };\n    const pos = this.rowHeightsCache.query(this.rows.length - 1);\n\n    translateXY(styles, 0, pos);\n\n    return styles;\n  }\n\n  /**\n   * Hides the loading indicator\n   */\n  hideIndicator(): void {\n    setTimeout(() => (this.loadingIndicator = false), 500);\n  }\n\n  /**\n   * Updates the index of the rows in the viewport\n   */\n  updateIndexes(): void {\n    let first = 0;\n    let last = 0;\n\n    if (this.scrollbarV) {\n      if (this.virtualization) {\n        // Calculation of the first and last indexes will be based on where the\n        // scrollY position would be at.  The last index would be the one\n        // that shows up inside the view port the last.\n        const height = parseInt(this.bodyHeight, 0);\n        first = this.rowHeightsCache.getRowIndex(this.offsetY);\n        last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n      } else {\n        // If virtual rows are not needed\n        // We render all in one go\n        first = 0;\n        last = this.rowCount;\n      }\n    } else {\n      // The server is handling paging and will pass an array that begins with the\n      // element at a specified offset.  first should always be 0 with external paging.\n      if (!this.externalPaging) {\n        first = Math.max(this.offset * this.pageSize, 0);\n      }\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n\n    this.indexes = { first, last };\n  }\n\n  /**\n   * Refreshes the full Row Height cache.  Should be used\n   * when the entire row array state has changed.\n   */\n  refreshRowHeightCache(): void {\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n      return;\n    }\n\n    // clear the previous row height cache if already present.\n    // this is useful during sorts, filters where the state of the\n    // rows array is changed.\n    this.rowHeightsCache.clearCache();\n\n    // Initialize the tree only if there are rows inside the tree.\n    if (this.rows && this.rows.length) {\n      const rowExpansions = new Set();\n      for (const row of this.rows) {\n        if (this.getRowExpanded(row)) {\n          rowExpansions.add(row);\n        }\n      }\n\n      this.rowHeightsCache.initCache({\n        rows: this.rows,\n        rowHeight: this.rowHeight,\n        detailRowHeight: this.getDetailRowHeight,\n        externalVirtual: this.scrollbarV && this.externalPaging,\n        rowCount: this.rowCount,\n        rowIndexes: this.rowIndexes,\n        rowExpansions\n      });\n    }\n  }\n\n  /**\n   * Gets the index for the view port\n   */\n  getAdjustedViewPortIndex(): number {\n    // Capture the row index of the first row that is visible on the viewport.\n    // If the scroll bar is just below the row which is highlighted then make that as the\n    // first index.\n    const viewPortFirstRowIndex = this.indexes.first;\n\n    if (this.scrollbarV && this.virtualization) {\n      const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n      return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n    }\n\n    return viewPortFirstRowIndex;\n  }\n\n  /**\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\n   * collapse and vice versa.   Note that the expanded status is stored as\n   * a part of the row object itself as we have to preserve the expanded row\n   * status in case of sorting and filtering of the row set.\n   */\n  toggleRowExpansion(row: any): void {\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n    const expanded = rowExpandedIdx > -1;\n\n    // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n    if (this.scrollbarV && this.virtualization) {\n      const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n      // const idx = this.rowIndexes.get(row) || 0;\n      const idx = this.getRowIndex(row);\n      this.rowHeightsCache.update(idx, detailRowHeight);\n    }\n\n    // Update the toggled row and update thive nevere heights in the cache.\n    if (expanded) {\n      this.rowExpansions.splice(rowExpandedIdx, 1);\n    } else {\n      this.rowExpansions.push(row);\n    }\n\n    this.detailToggle.emit({\n      rows: [row],\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Expand/Collapse all the rows no matter what their state is.\n   */\n  toggleAllRows(expanded: boolean): void {\n    // clear prev expansions\n    this.rowExpansions = [];\n\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n\n    if (expanded) {\n      for (const row of this.rows) {\n        this.rowExpansions.push(row);\n      }\n    }\n\n    if (this.scrollbarV) {\n      // Refresh the full row heights cache since every row was affected.\n      this.recalcLayout();\n    }\n\n    // Emit all rows that have been expanded.\n    this.detailToggle.emit({\n      rows: this.rows,\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Recalculates the table\n   */\n  recalcLayout(): void {\n    this.refreshRowHeightCache();\n    this.updateIndexes();\n    this.updateRows();\n  }\n\n  /**\n   * Tracks the column\n   */\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  /**\n   * Gets the row pinning group styles\n   */\n  stylesByGroup(group: string) {\n    const widths = this.columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = offsetDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\n   */\n  getRowExpanded(row: any): boolean {\n    if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n      for (const group of this.groupedRows) {\n        this.rowExpansions.push(group);\n      }\n    }\n\n    return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n  }\n\n  getRowExpandedIdx(row: any, expanded: any[]): number {\n    if (!expanded || !expanded.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return expanded.findIndex((r) => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n\n  /**\n   * Gets the row index given a row\n   */\n  getRowIndex(row: any): number {\n    return this.rowIndexes.get(row) || 0;\n  }\n\n  onTreeAction(row: any) {\n    this.treeAction.emit({ row });\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy, OnDestroy\n} from '@angular/core';\nimport { MouseEvent } from '../../events';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { DataTableColumnDirective } from '../columns/column.directive';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n    <div\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  @Input() sortAscendingIcon: any;\n  @Input() sortDescendingIcon: any;\n  @Input() scrollbarH: boolean;\n  @Input() dealsWithGroup: boolean;\n  @Input() targetMarkerTemplate: any;\n\n  targetMarkerContext: any;\n\n  @Input() set innerWidth(val: number) {\n    this._innerWidth = val;\n    setTimeout(() => {\n      if (this._columns) {\n        const colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        this.setStylesByGroup();\n      }\n    });\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() sorts: any[];\n  @Input() sortType: SortType;\n  @Input() allRowsSelected: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() reorderable: boolean;\n\n  dragEventTarget: any;\n\n  @HostBinding('style.height')\n  @Input()\n  set headerHeight(val: any) {\n    if (val !== 'auto') {\n      this._headerHeight = `${val}px`;\n    } else {\n      this._headerHeight = val;\n    }\n  }\n\n  get headerHeight(): any {\n    return this._headerHeight;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n\n    const colsByPin = columnsByPin(val);\n    this._columnsByPin = columnsByPinArr(val);\n    setTimeout(() => {\n      this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n      this.setStylesByGroup();\n    });\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.setStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  _columnsByPin: any;\n  _columnGroupWidths: any = {\n    total: 100\n  };\n  _innerWidth: number;\n  _offsetX: number;\n  _columns: any[];\n  _headerHeight: string;\n  _styleByGroup: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private destroyed = false;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  onLongPressStart({ event, model }: { event: any; model: any }) {\n    model.dragging = true;\n    this.dragEventTarget = event;\n  }\n\n  onLongPressEnd({ event, model }: { event: any; model: any }) {\n    this.dragEventTarget = event;\n\n    // delay resetting so sort can be\n    // prevented if we were dragging\n    setTimeout(() => {\n      // datatable component creates copies from columns on reorder\n      // set dragging to false on new objects\n      const column = this._columns.find(c => c.$$id === model.$$id);\n      if (column) {\n        column.dragging = false;\n      }\n    }, 5);\n  }\n\n  @HostBinding('style.width')\n  get headerWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    }\n\n    return '100%';\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  onColumnResized(width: number, column: DataTableColumnDirective): void {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if (width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    this.resize.emit({\n      column,\n      prevValue: column.width,\n      newValue: width\n    });\n  }\n\n  onColumnReordered({ prevIndex, newIndex, model }: any): void {\n    const column = this.getColumn(newIndex);\n    column.isTarget = false;\n    column.targetMarkerContext = undefined;\n    this.reorder.emit({\n      column: model,\n      prevValue: prevIndex,\n      newValue: newIndex\n    });\n  }\n\n  onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void {\n    if (prevIndex || prevIndex === 0) {\n      const oldColumn = this.getColumn(prevIndex);\n      oldColumn.isTarget = false;\n      oldColumn.targetMarkerContext = undefined;\n    }\n    if (newIndex || newIndex === 0) {\n      const newColumn = this.getColumn(newIndex);\n      newColumn.isTarget = true;\n\n      if (initialIndex !== newIndex) {\n        newColumn.targetMarkerContext = {\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n        };\n      }\n    }\n  }\n\n  getColumn(index: number): any {\n    const leftColumnCount = this._columnsByPin[0].columns.length;\n    if (index < leftColumnCount) {\n      return this._columnsByPin[0].columns[index];\n    }\n\n    const centerColumnCount = this._columnsByPin[1].columns.length;\n    if (index < leftColumnCount + centerColumnCount) {\n      return this._columnsByPin[1].columns[index - leftColumnCount];\n    }\n\n    return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n  }\n\n  onSort({ column, prevValue, newValue }: any): void {\n    // if we are dragging don't sort!\n    if (column.dragging) {\n      return;\n    }\n\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\n    this.sort.emit({\n      sorts,\n      column,\n      prevValue,\n      newValue\n    });\n  }\n\n  calcNewSorts(column: any, prevValue: number, newValue: number): any[] {\n    let idx = 0;\n\n    if (!this.sorts) {\n      this.sorts = [];\n    }\n\n    const sorts = this.sorts.map((s, i) => {\n      s = { ...s };\n      if (s.prop === column.prop) {\n        idx = i;\n      }\n      return s;\n    });\n\n    if (newValue === undefined) {\n      sorts.splice(idx, 1);\n    } else if (prevValue) {\n      sorts[idx].dir = newValue;\n    } else {\n      if (this.sortType === SortType.single) {\n        sorts.splice(0, this.sorts.length);\n      }\n\n      sorts.push({ dir: newValue, prop: column.prop });\n    }\n\n    return sorts;\n  }\n\n  setStylesByGroup() {\n    this._styleByGroup.left = this.calcStylesByGroup('left');\n    this._styleByGroup.center = this.calcStylesByGroup('center');\n    this._styleByGroup.right = this.calcStylesByGroup('right');\n    if (!this.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  calcStylesByGroup(group: string): any {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if (group === 'right') {\n      const totalDiff = widths.total - this.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n}\n","/**\n * Throttle a function\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context: any;\n  let args: any;\n  let result: any;\n  let timeout: any = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function(this: any) {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target: any, key: PropertyKey, descriptor: PropertyDescriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import { columnsByPin, columnsTotalWidth } from './column';\n\n/**\n * Calculates the Total Flex Grow\n */\nexport function getTotalFlexGrow(columns: any[]) {\n  let totalFlexGrow = 0;\n\n  for (const c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n\n  return totalFlexGrow;\n}\n\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any) {\n  const columnsWidth = columnsTotalWidth(allColumns);\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\n  const colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for (const attr in colsByGroup) {\n    for (const column of colsByGroup[attr]) {\n      if (!column.canAutoResize) {\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n\n  const hasMinWidth = {};\n  let remainingWidth = maxWidth;\n\n  // resize columns until no width is left to be distributed\n  do {\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for (const attr in colsByGroup) {\n      for (const column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\nexport function forceFillColumnWidths(\n  allColumns: any[],\n  expectedWidth: number,\n  startIdx: number,\n  allowBleed: boolean,\n  defaultColWidth: number = 300\n) {\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\n    return c.canAutoResize !== false;\n  });\n\n  for (const column of columnsToResize) {\n    if (!column.$$oldWidth) {\n      column.$$oldWidth = column.width;\n    }\n  }\n\n  let additionWidthPerColumn = 0;\n  let exceedsWindow = false;\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\n  let remainingWidth = expectedWidth - contentWidth;\n  const columnsProcessed: any[] = [];\n  const remainingWidthLimit = 1; // when to stop\n\n  // This loop takes care of the\n  do {\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\n    exceedsWindow = contentWidth >= expectedWidth;\n\n    for (const column of columnsToResize) {\n      if (exceedsWindow && allowBleed) {\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\n      } else {\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n\n        if (column.minWidth && newSize < column.minWidth) {\n          column.width = column.minWidth;\n          columnsProcessed.push(column);\n        } else if (column.maxWidth && newSize > column.maxWidth) {\n          column.width = column.maxWidth;\n          columnsProcessed.push(column);\n        } else {\n          column.width = newSize;\n        }\n      }\n\n      column.width = Math.max(0, column.width);\n    }\n\n    contentWidth = getContentWidth(allColumns);\n    remainingWidth = expectedWidth - contentWidth;\n    removeProcessedColumns(columnsToResize, columnsProcessed);\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n\n/**\n * Remove the processed columns from the current active columns.\n */\nfunction removeProcessedColumns(columnsToResize: any[], columnsProcessed: any[]) {\n  for (const column of columnsProcessed) {\n    const index = columnsToResize.indexOf(column);\n    columnsToResize.splice(index, 1);\n  }\n}\n\n/**\n * Gets the width of the columns\n */\nfunction getContentWidth(allColumns: any, defaultColWidth: number = 300): number {\n  let contentWidth = 0;\n\n  for (const column of allColumns) {\n    contentWidth += column.width || defaultColWidth;\n  }\n\n  return contentWidth;\n}\n","export enum SortDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n","import { getterForProp } from './column-prop-getters';\nimport { SortType } from '../types/sort.type';\nimport { SortDirection } from '../types/sort-direction.type';\nimport { SortPropDir } from '../types/sort-prop-dir.type';\n/**\n * Gets the next sort direction\n */\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\n  if (sortType === SortType.single) {\n    if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if (!current) {\n      return SortDirection.asc;\n    } else if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if (current === SortDirection.desc) {\n      return undefined;\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n}\n\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\nexport function orderByComparator(a: any, b: any): number {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n  if (a instanceof Date && b instanceof Date) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n    // Convert to string in case of a=0 or b=0\n    a = String(a);\n    b = String(b);\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n\n  // equal each other\n  return 0;\n}\n\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\nexport function sortRows(rows: any[], columns: any[], dirs: SortPropDir[]): any[] {\n  if (!rows) return [];\n  if (!dirs || !dirs.length || !columns) return [...rows];\n\n  /**\n   * record the row ordering of results from prior sort operations (if applicable)\n   * this is necessary to guarantee stable sorting behavior\n   */\n  const rowToIndexMap = new Map<any, number>();\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\n\n  const temp = [...rows];\n  const cols = columns.reduce((obj, col) => {\n    if (col.comparator && typeof col.comparator === 'function') {\n      obj[col.prop] = col.comparator;\n    }\n    return obj;\n  }, {});\n\n  // cache valueGetter and compareFn so that they\n  // do not need to be looked-up in the sort function body\n  const cachedDirs = dirs.map(dir => {\n    const prop = dir.prop;\n    return {\n      prop,\n      dir: dir.dir,\n      valueGetter: getterForProp(prop),\n      compareFn: cols[prop] || orderByComparator\n    };\n  });\n\n  return temp.sort(function(rowA: any, rowB: any) {\n    for (const cachedDir of cachedDirs) {\n      // Get property and valuegetters for column to be sorted\n      const { prop, valueGetter } = cachedDir;\n      // Get A and B cell values from rows based on properties of the columns\n      const propA = valueGetter(rowA, prop);\n      const propB = valueGetter(rowB, prop);\n\n      // Compare function gets five parameters:\n      // Two cell values to be compared as propA and propB\n      // Two rows corresponding to the cells as rowA and rowB\n      // Direction of the sort for this column as SortDirection\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\n      // as additional parameters are silently ignored. The whole row and sort\n      // direction enable more complex sort logic.\n      const comparison =\n        cachedDir.dir !== SortDirection.desc\n          ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n          : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\n\n    /**\n     * all else being equal, preserve original order of the rows (stable sort)\n     */\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n  });\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  ViewChild,\n  HostListener,\n  ContentChildren,\n  OnInit,\n  QueryList,\n  AfterViewInit,\n  HostBinding,\n  ContentChild,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SkipSelf,\n  OnDestroy,\n  Optional,\n  Inject\n} from '@angular/core';\n\nimport { DatatableGroupHeaderDirective } from './body/body-group-header.directive';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { INgxDatatableConfig } from '../ngx-datatable.module';\nimport { groupRowsByParents, optionalGetterForProp } from '../utils/tree';\nimport { TableColumn } from '../types/table-column.type';\nimport { setColumnDefaults, translateTemplates } from '../utils/column-helper';\nimport { ColumnMode } from '../types/column-mode.type';\nimport { SelectionType } from '../types/selection.type';\nimport { SortType } from '../types/sort.type';\nimport { ContextmenuType } from '../types/contextmenu.type';\nimport { DataTableColumnDirective } from './columns/column.directive';\nimport { DatatableRowDetailDirective } from './row-detail/row-detail.directive';\nimport { DatatableFooterDirective } from './footer/footer.directive';\nimport { DataTableBodyComponent } from './body/body.component';\nimport { DataTableHeaderComponent } from './header/header.component';\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\nimport { ColumnChangesService } from '../services/column-changes.service';\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\nimport { throttleable } from '../utils/throttle';\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\nimport { sortRows } from '../utils/sort';\n\n@Component({\n  selector: 'ngx-datatable',\n  templateUrl: './datatable.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datatable.component.scss'],\n  host: {\n    class: 'ngx-datatable'\n  }\n})\nexport class DatatableComponent implements OnInit, DoCheck, AfterViewInit {\n  /**\n   * Template for the target marker of drag target columns.\n   */\n  @Input() targetMarkerTemplate: any;\n\n  /**\n   * Rows that are displayed in the table.\n   */\n  @Input() set rows(val: any) {\n    this._rows = val;\n\n    if (val) {\n      this._internalRows = [...val];\n    }\n\n    // auto sort on new updates\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // recalculate sizes/etc\n    this.recalculate();\n\n    if (this._rows && this._groupRowsBy) {\n      // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n      this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Gets the rows.\n   */\n  get rows(): any {\n    return this._rows;\n  }\n\n  /**\n   * This attribute allows the user to set the name of the column to group the data with\n   */\n  @Input() set groupRowsBy(val: string) {\n    if (val) {\n      this._groupRowsBy = val;\n      if (this._rows && this._groupRowsBy) {\n        // cretes a new array with the data grouped\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n      }\n    }\n  }\n\n  get groupRowsBy() {\n    return this._groupRowsBy;\n  }\n\n  /**\n   * This attribute allows the user to set a grouped array in the following format:\n   *  [\n   *    {groupid=1} [\n   *      {id=1 name=\"test1\"},\n   *      {id=2 name=\"test2\"},\n   *      {id=3 name=\"test3\"}\n   *    ]},\n   *    {groupid=2>[\n   *      {id=4 name=\"test4\"},\n   *      {id=5 name=\"test5\"},\n   *      {id=6 name=\"test6\"}\n   *    ]}\n   *  ]\n   */\n  @Input() groupedRows: any[];\n\n  /**\n   * Columns to be displayed.\n   */\n  @Input() set columns(val: TableColumn[]) {\n    if (val) {\n      this._internalColumns = [...val];\n      setColumnDefaults(this._internalColumns);\n      this.recalculateColumns();\n    }\n\n    this._columns = val;\n  }\n\n  /**\n   * Get the columns.\n   */\n  get columns(): TableColumn[] {\n    return this._columns;\n  }\n\n  /**\n   * List of row objects that should be\n   * represented as selected in the grid.\n   * Default value: `[]`\n   */\n  @Input() selected: any[] = [];\n\n  /**\n   * Enable vertical scrollbars\n   */\n  @Input() scrollbarV: boolean = false;\n\n  /**\n   * Enable horz scrollbars\n   */\n  @Input() scrollbarH: boolean = false;\n\n  /**\n   * The row height; which is necessary\n   * to calculate the height for the lazy rendering.\n   */\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number) = 30;\n\n  /**\n   * Type of column width distribution formula.\n   * Example: flex, force, standard\n   */\n  @Input() columnMode: ColumnMode = ColumnMode.standard;\n\n  /**\n   * The minimum header height in pixels.\n   * Pass a falsey for no header\n   */\n  @Input() headerHeight: any = 30;\n\n  /**\n   * The minimum footer height in pixels.\n   * Pass falsey for no footer\n   */\n  @Input() footerHeight: number = 0;\n\n  /**\n   * If the table should use external paging\n   * otherwise its assumed that all data is preloaded.\n   */\n  @Input() externalPaging: boolean = false;\n\n  /**\n   * If the table should use external sorting or\n   * the built-in basic sorting.\n   */\n  @Input() externalSorting: boolean = false;\n\n  /**\n   * The page size to be shown.\n   * Default value: `undefined`\n   */\n  @Input() set limit(val: number | undefined) {\n    this._limit = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the limit.\n   */\n  get limit(): number | undefined {\n    return this._limit;\n  }\n\n  /**\n   * The total count of all rows.\n   * Default value: `0`\n   */\n  @Input() set count(val: number) {\n    this._count = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the count.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * The current offset ( page - 1 ) shown.\n   * Default value: `0`\n   */\n  @Input() set offset(val: number) {\n    this._offset = val;\n  }\n  get offset(): number {\n    return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n  }\n\n  /**\n   * Show the linear loading bar.\n   * Default value: `false`\n   */\n  @Input() loadingIndicator: boolean = false;\n\n  /**\n   * Type of row selection. Options are:\n   *\n   *  - `single`\n   *  - `multi`\n   *  - `checkbox`\n   *  - `multiClick`\n   *  - `cell`\n   *\n   * For no selection pass a `falsey`.\n   * Default value: `undefined`\n   */\n  @Input() selectionType: SelectionType;\n\n  /**\n   * Enable/Disable ability to re-order columns\n   * by dragging them.\n   */\n  @Input() reorderable: boolean = true;\n\n  /**\n   * Swap columns on re-order columns or\n   * move them.\n   */\n  @Input() swapColumns: boolean = true;\n\n  /**\n   * The type of sorting\n   */\n  @Input() sortType: SortType = SortType.single;\n\n  /**\n   * Array of sorted columns by property and type.\n   * Default value: `[]`\n   */\n  @Input() sorts: any[] = [];\n\n  /**\n   * Css class overrides\n   */\n  @Input() cssClasses: any = {\n    sortAscending: 'datatable-icon-up',\n    sortDescending: 'datatable-icon-down',\n    pagerLeftArrow: 'datatable-icon-left',\n    pagerRightArrow: 'datatable-icon-right',\n    pagerPrevious: 'datatable-icon-prev',\n    pagerNext: 'datatable-icon-skip'\n  };\n\n  /**\n   * Message overrides for localization\n   *\n   * emptyMessage     [default] = 'No data to display'\n   * totalMessage     [default] = 'total'\n   * selectedMessage  [default] = 'selected'\n   */\n  @Input() messages: any = {\n    // Message to show when array is presented\n    // but contains no values\n    emptyMessage: 'No data to display',\n\n    // Footer total message\n    totalMessage: 'total',\n\n    // Footer selected message\n    selectedMessage: 'selected'\n  };\n\n  /**\n   * Row specific classes.\n   * Similar implementation to ngClass.\n   *\n   *  [rowClass]=\"'first second'\"\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n   */\n  @Input() rowClass: any;\n\n  /**\n   * A boolean/function you can use to check whether you want\n   * to select a particular row based on a criteria. Example:\n   *\n   *    (selection) => {\n   *      return selection !== 'Ethel Price';\n   *    }\n   */\n  @Input() selectCheck: any;\n\n  /**\n   * A function you can use to check whether you want\n   * to show the checkbox for a particular row based on a criteria. Example:\n   *\n   *    (row, column, value) => {\n   *      return row.name !== 'Ethel Price';\n   *    }\n   */\n  @Input() displayCheck: (row: any, column?: any, value?: any) => boolean;\n\n  /**\n   * A boolean you can use to set the detault behaviour of rows and groups\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\n   *\n   */\n  @Input() groupExpansionDefault: boolean = false;\n\n  /**\n   * Property to which you can use for custom tracking of rows.\n   * Example: 'name'\n   */\n  @Input() trackByProp: string;\n\n  /**\n   * Property to which you can use for determining select all\n   * rows on current page or not.\n   *\n   * @memberOf DatatableComponent\n   */\n  @Input() selectAllRowsOnPage = false;\n\n  /**\n   * A flag for row virtualization on / off\n   */\n  @Input() virtualization: boolean = true;\n\n  /**\n   * Tree from relation\n   */\n  @Input() treeFromRelation: string;\n\n  /**\n   * Tree to relation\n   */\n  @Input() treeToRelation: string;\n\n  /**\n   * A flag for switching summary row on / off\n   */\n  @Input() summaryRow: boolean = false;\n\n  /**\n   * A height of summary row\n   */\n  @Input() summaryHeight: number = 30;\n\n  /**\n   * A property holds a summary row position: top/bottom\n   */\n  @Input() summaryPosition: string = 'top';\n\n  /**\n   * Body was scrolled typically in a `scrollbarV:true` scenario.\n   */\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was focused via keyboard or mouse click.\n   */\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was selected.\n   */\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column sort was invoked.\n   */\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The table was paged either triggered by the pager or the body scroll.\n   */\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Columns were re-ordered.\n   */\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column was resized.\n   */\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The context menu was invoked on the table.\n   * type indicates whether the header or the body was clicked.\n   * content contains either the column or the row that was clicked.\n   */\n  @Output() tableContextmenu = new EventEmitter<{ event: MouseEvent; type: ContextmenuType; content: any }>(false);\n\n  /**\n   * A row was expanded ot collapsed for tree\n   */\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * CSS class applied if the header height if fixed height.\n   */\n  @HostBinding('class.fixed-header')\n  get isFixedHeader(): boolean {\n    const headerHeight: number | string = this.headerHeight;\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\n  }\n\n  /**\n   * CSS class applied to the root element if\n   * the row heights are fixed heights.\n   */\n  @HostBinding('class.fixed-row')\n  get isFixedRow(): boolean {\n    return this.rowHeight !== 'auto';\n  }\n\n  /**\n   * CSS class applied to root element if\n   * vertical scrolling is enabled.\n   */\n  @HostBinding('class.scroll-vertical')\n  get isVertScroll(): boolean {\n    return this.scrollbarV;\n  }\n\n  /**\n   * CSS class applied to root element if\n   * virtualization is enabled.\n   */\n  @HostBinding('class.virtualized')\n  get isVirtualized(): boolean {\n    return this.virtualization;\n  }\n\n  /**\n   * CSS class applied to the root element\n   * if the horziontal scrolling is enabled.\n   */\n  @HostBinding('class.scroll-horz')\n  get isHorScroll(): boolean {\n    return this.scrollbarH;\n  }\n\n  /**\n   * CSS class applied to root element is selectable.\n   */\n  @HostBinding('class.selectable')\n  get isSelectable(): boolean {\n    return this.selectionType !== undefined;\n  }\n\n  /**\n   * CSS class applied to root is checkbox selection.\n   */\n  @HostBinding('class.checkbox-selection')\n  get isCheckboxSelection(): boolean {\n    return this.selectionType === SelectionType.checkbox;\n  }\n\n  /**\n   * CSS class applied to root if cell selection.\n   */\n  @HostBinding('class.cell-selection')\n  get isCellSelection(): boolean {\n    return this.selectionType === SelectionType.cell;\n  }\n\n  /**\n   * CSS class applied to root if single select.\n   */\n  @HostBinding('class.single-selection')\n  get isSingleSelection(): boolean {\n    return this.selectionType === SelectionType.single;\n  }\n\n  /**\n   * CSS class added to root element if mulit select\n   */\n  @HostBinding('class.multi-selection')\n  get isMultiSelection(): boolean {\n    return this.selectionType === SelectionType.multi;\n  }\n\n  /**\n   * CSS class added to root element if mulit click select\n   */\n  @HostBinding('class.multi-click-selection')\n  get isMultiClickSelection(): boolean {\n    return this.selectionType === SelectionType.multiClick;\n  }\n\n  /**\n   * Column templates gathered from `ContentChildren`\n   * if described in your markup.\n   */\n  @ContentChildren(DataTableColumnDirective)\n  set columnTemplates(val: QueryList<DataTableColumnDirective>) {\n    this._columnTemplates = val;\n    this.translateColumns(val);\n  }\n\n  /**\n   * Returns the column templates.\n   */\n  get columnTemplates(): QueryList<DataTableColumnDirective> {\n    return this._columnTemplates;\n  }\n\n  /**\n   * Row Detail templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableRowDetailDirective, { static: false })\n  rowDetail: DatatableRowDetailDirective;\n\n  /**\n   * Group Header templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableGroupHeaderDirective, { static: false })\n  groupHeader: DatatableGroupHeaderDirective;\n\n  /**\n   * Footer template gathered from the ContentChild\n   */\n  @ContentChild(DatatableFooterDirective, { static: false })\n  footer: DatatableFooterDirective;\n\n  /**\n   * Reference to the body component for manually\n   * invoking functions on the body.\n   */\n  @ViewChild(DataTableBodyComponent, { static: false })\n  bodyComponent: DataTableBodyComponent;\n\n  /**\n   * Reference to the header component for manually\n   * invoking functions on the header.\n   *\n   * @memberOf DatatableComponent\n   */\n  @ViewChild(DataTableHeaderComponent, { static: false })\n  headerComponent: DataTableHeaderComponent;\n\n  /**\n   * Returns if all rows are selected.\n   */\n  get allRowsSelected(): boolean {\n    let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n\n    if (this.selectAllRowsOnPage) {\n      const indexes = this.bodyComponent.indexes;\n      const rowsOnPage = indexes.last - indexes.first;\n      allRowsSelected = this.selected.length === rowsOnPage;\n    }\n\n    return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n  }\n\n  element: HTMLElement;\n  _innerWidth: number;\n  pageSize: number;\n  bodyHeight: number;\n  rowCount: number = 0;\n  rowDiffer: KeyValueDiffer<{}, {}>;\n\n  _offsetX = new BehaviorSubject(0);\n  _limit: number | undefined;\n  _count: number = 0;\n  _offset: number = 0;\n  _rows: any[];\n  _groupRowsBy: string;\n  _internalRows: any[];\n  _internalColumns: TableColumn[];\n  _columns: TableColumn[];\n  _columnTemplates: QueryList<DataTableColumnDirective>;\n  _subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    @SkipSelf() private dimensionsHelper: DimensionsHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef,\n    differs: KeyValueDiffers,\n    private columnChangesService: ColumnChangesService,\n    @Optional() @Inject('configuration') private configuration: INgxDatatableConfig\n  ) {\n    // get ref to elm for measuring\n    this.element = element.nativeElement;\n    this.rowDiffer = differs.find({}).create();\n\n    // apply global settings from Module.forRoot\n    if (this.configuration && this.configuration.messages) {\n      this.messages = { ...this.configuration.messages };\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called after data-bound\n   * properties of a directive are initialized.\n   */\n  ngOnInit(): void {\n    // need to call this immediatly to size\n    // if the table is hidden the visibility\n    // listener will invoke this itself upon show\n    this.recalculate();\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * view has been fully initialized.\n   */\n  ngAfterViewInit(): void {\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // this has to be done to prevent the change detection\n    // tree from freaking out because we are readjusting\n    if (typeof requestAnimationFrame === 'undefined') {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      this.recalculate();\n\n      // emit page for virtual server-side kickoff\n      if (this.externalPaging && this.scrollbarV) {\n        this.page.emit({\n          count: this.count,\n          pageSize: this.pageSize,\n          limit: this.limit,\n          offset: 0\n        });\n      }\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * content has been fully initialized.\n   */\n  ngAfterContentInit() {\n    this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\n    this.listenForColumnInputChanges();\n  }\n\n  /**\n   * This will be used when displaying or selecting rows.\n   * when tracking/comparing them, we'll use the value of this fn,\n   *\n   * (`fn(x) === fn(y)` instead of `x === y`)\n   */\n  @Input() rowIdentity: (x: any) => any = (x: any) => {\n    if (this._groupRowsBy) {\n      // each group in groupedRows are stored as {key, value: [rows]},\n      // where key is the groupRowsBy index\n      return x.key;\n    } else {\n      return x;\n    }\n  };\n\n  /**\n   * Translates the templates to the column objects\n   */\n  translateColumns(val: any) {\n    if (val) {\n      const arr = val.toArray();\n      if (arr.length) {\n        this._internalColumns = translateTemplates(arr);\n        setColumnDefaults(this._internalColumns);\n        this.recalculateColumns();\n        this.sortInternalRows();\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Creates a map with the data grouped by the user choice of grouping index\n   *\n   * @param originalArray the original array passed via parameter\n   * @param groupByIndex  the index of the column to group the data by\n   */\n  groupArrayBy(originalArray: any, groupBy: any) {\n    // create a map to hold groups with their corresponding results\n    const map = new Map();\n    let i: number = 0;\n\n    originalArray.forEach((item: any) => {\n      const key = item[groupBy];\n      if (!map.has(key)) {\n        map.set(key, [item]);\n      } else {\n        map.get(key).push(item);\n      }\n      i++;\n    });\n\n    const addGroup = (key: any, value: any) => {\n      return { key, value };\n    };\n\n    // convert map back to a simple array of objects\n    return Array.from(map, x => addGroup(x[0], x[1]));\n  }\n\n  /*\n   * Lifecycle hook that is called when Angular dirty checks a directive.\n   */\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.rows)) {\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } else {\n        this._internalRows = [...this.rows];\n      }\n\n      // auto group by parent on new update\n      this._internalRows = groupRowsByParents(\n        this._internalRows,\n        optionalGetterForProp(this.treeFromRelation),\n        optionalGetterForProp(this.treeToRelation)\n      );\n\n      this.recalculatePages();\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Recalc's the sizes of the grid.\n   *\n   * Updated automatically on changes to:\n   *\n   *  - Columns\n   *  - Rows\n   *  - Paging related\n   *\n   * Also can be manually invoked or upon window resize.\n   */\n  recalculate(): void {\n    this.recalculateDims();\n    this.recalculateColumns();\n  }\n\n  /**\n   * Window resize handler to update sizes.\n   */\n  @HostListener('window:resize')\n  @throttleable(5)\n  onWindowResize(): void {\n    this.recalculate();\n  }\n\n  /**\n   * Recalulcates the column widths based on column width\n   * distribution mode and scrollbar offsets.\n   */\n  recalculateColumns(\n    columns: any[] = this._internalColumns,\n    forceIdx: number = -1,\n    allowBleed: boolean = this.scrollbarH\n  ): any[] | undefined {\n    if (!columns) return undefined;\n\n    let width = this._innerWidth;\n    if (this.scrollbarV) {\n      width = width - this.scrollbarHelper.width;\n    }\n\n    if (this.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n    } else if (this.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(columns, width);\n    }\n\n    return columns;\n  }\n\n  /**\n   * Recalculates the dimensions of the table size.\n   * Internally calls the page size and row count calcs too.\n   *\n   */\n  recalculateDims(): void {\n    const dims = this.dimensionsHelper.getDimensions(this.element);\n    this._innerWidth = Math.floor(dims.width);\n\n    if (this.scrollbarV) {\n      let height = dims.height;\n      if (this.headerHeight) height = height - this.headerHeight;\n      if (this.footerHeight) height = height - this.footerHeight;\n      this.bodyHeight = height;\n    }\n\n    this.recalculatePages();\n  }\n\n  /**\n   * Recalculates the pages after a update.\n   */\n  recalculatePages(): void {\n    this.pageSize = this.calcPageSize();\n    this.rowCount = this.calcRowCount();\n  }\n\n  /**\n   * Body triggered a page event.\n   */\n  onBodyPage({ offset }: any): void {\n    // Avoid pagination caming from body events like scroll when the table\n    // has no virtualization and the external paging is enable.\n    // This means, let's the developer handle pagination by my him(her) self\n    if (this.externalPaging && !this.virtualization) {\n      return;\n    }\n\n    this.offset = offset;\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n  }\n\n  /**\n   * The body triggered a scroll event.\n   */\n  onBodyScroll(event: MouseEvent): void {\n    this._offsetX.next(event.offsetX);\n    this.scroll.emit(event);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * The footer triggered a page event.\n   */\n  onFooterPage(event: any) {\n    this.offset = event.page - 1;\n    this.bodyComponent.updateOffsetY(this.offset);\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n  }\n\n  /**\n   * Recalculates the sizes of the page\n   */\n  calcPageSize(val: any[] = this.rows): number {\n    // Keep the page size constant even if the row has been expanded.\n    // This is because an expanded row is still considered to be a child of\n    // the original row.  Hence calculation would use rowHeight only.\n    if (this.scrollbarV && this.virtualization) {\n      const size = Math.ceil(this.bodyHeight / (this.rowHeight as number));\n      return Math.max(size, 0);\n    }\n\n    // if limit is passed, we are paging\n    if (this.limit !== undefined) {\n      return this.limit;\n    }\n\n    // otherwise use row length\n    if (val) {\n      return val.length;\n    }\n\n    // other empty :(\n    return 0;\n  }\n\n  /**\n   * Calculates the row count.\n   */\n  calcRowCount(val: any[] = this.rows): number {\n    if (!this.externalPaging) {\n      if (!val) return 0;\n\n      if (this.groupedRows) {\n        return this.groupedRows.length;\n      } else if (this.treeFromRelation != null && this.treeToRelation != null) {\n        return this._internalRows.length;\n      } else {\n        return val.length;\n      }\n    }\n\n    return this.count;\n  }\n\n  /**\n   * The header triggered a contextmenu event.\n   */\n  onColumnContextmenu({ event, column }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n  }\n\n  /**\n   * The body triggered a contextmenu event.\n   */\n  onRowContextmenu({ event, row }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n  }\n\n  /**\n   * The header triggered a column resize event.\n   */\n  onColumnResize({ column, newValue }: any): void {\n    /* Safari/iOS 10.2 workaround */\n    if (column === undefined) {\n      return;\n    }\n\n    let idx: number;\n    const cols = this._internalColumns.map((c, i) => {\n      c = { ...c };\n\n      if (c.$$id === column.$$id) {\n        idx = i;\n        c.width = newValue;\n\n        // set this so we can force the column\n        // width distribution to be to this value\n        c.$$oldWidth = newValue;\n      }\n\n      return c;\n    });\n\n    this.recalculateColumns(cols, idx);\n    this._internalColumns = cols;\n\n    this.resize.emit({\n      column,\n      newValue\n    });\n  }\n\n  /**\n   * The header triggered a column re-order event.\n   */\n  onColumnReorder({ column, newValue, prevValue }: any): void {\n    const cols = this._internalColumns.map(c => {\n      return { ...c };\n    });\n\n    if (this.swapColumns) {\n      const prevCol = cols[newValue];\n      cols[newValue] = column;\n      cols[prevValue] = prevCol;\n    } else {\n      if (newValue > prevValue) {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i < newValue; i++) {\n          cols[i] = cols[i + 1];\n        }\n        cols[newValue] = movedCol;\n      } else {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i > newValue; i--) {\n          cols[i] = cols[i - 1];\n        }\n        cols[newValue] = movedCol;\n      }\n    }\n\n    this._internalColumns = cols;\n\n    this.reorder.emit({\n      column,\n      newValue,\n      prevValue\n    });\n  }\n\n  /**\n   * The header triggered a column sort event.\n   */\n  onColumnSort(event: any): void {\n    // clean selected rows\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n\n    this.sorts = event.sorts;\n\n    // this could be optimized better since it will resort\n    // the rows again on the 'push' detection...\n    if (this.externalSorting === false) {\n      // don't use normal setter so we don't resort\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // Always go to first page when sorting to see the newly sorted data\n    this.offset = 0;\n    this.bodyComponent.updateOffsetY(this.offset);\n    this.sort.emit(event);\n  }\n\n  /**\n   * Toggle all row selection\n   */\n  onHeaderSelect(event: any): void {\n    if (this.selectAllRowsOnPage) {\n      // before we splice, chk if we currently have all selected\n      const first = this.bodyComponent.indexes.first;\n      const last = this.bodyComponent.indexes.last;\n      const allSelected = this.selected.length === last - first;\n\n      // remove all existing either way\n      this.selected = [];\n\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this._internalRows.slice(first, last));\n      }\n    } else {\n      // before we splice, chk if we currently have all selected\n      const allSelected = this.selected.length === this.rows.length;\n      // remove all existing either way\n      this.selected = [];\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this.rows);\n      }\n    }\n\n    this.select.emit({\n      selected: this.selected\n    });\n  }\n\n  /**\n   * A row was selected from body\n   */\n  onBodySelect(event: any): void {\n    this.select.emit(event);\n  }\n\n  /**\n   * A row was expanded or collapsed for tree\n   */\n  onTreeAction(event: any) {\n    const row = event.row;\n    // TODO: For duplicated items this will not work\n    const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\n    this.treeAction.emit({ row, rowIndex });\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * listen for changes to input bindings of all DataTableColumnDirective and\n   * trigger the columnTemplates.changes observable to emit\n   */\n  private listenForColumnInputChanges(): void {\n    this._subscriptions.push(\n      this.columnChangesService.columnInputChanges$.subscribe(() => {\n        if (this.columnTemplates) {\n          this.columnTemplates.notifyOnChanges();\n        }\n      })\n    );\n  }\n\n  private sortInternalRows(): void {\n    this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n  }\n}\n","import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  HostBinding,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { MouseEvent } from '../../events';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { TableColumn } from '../../types/table-column.type';\nimport { nextSortDir } from '../../utils/sort';\nimport { SortDirection } from '../../types/sort-direction.type';\n\n@Component({\n  selector: 'datatable-header-cell',\n  template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header-cell'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderCellComponent {\n  @Input() sortType: SortType;\n  @Input() sortAscendingIcon: string;\n  @Input() sortDescendingIcon: string;\n\n  @Input() isTarget: boolean;\n  @Input() targetMarkerTemplate: any;\n  @Input() targetMarkerContext: any;\n\n  _allRowsSelected: boolean;\n\n  @Input() set allRowsSelected(value) {\n    this._allRowsSelected = value;\n    this.cellContext.allRowsSelected = value;\n  }\n  get allRowsSelected() {\n    return this._allRowsSelected;\n  }\n\n  @Input() selectionType: SelectionType;\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  headerHeight: number;\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.sortDir = this.calcSortDir(val);\n    this.cellContext.sortDir = this.sortDir;\n    this.sortClass = this.calcSortClass(this.sortDir);\n    this.cd.markForCheck();\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-header-cell';\n\n    if (this.column.sortable) cls += ' sortable';\n    if (this.column.resizeable) cls += ' resizeable';\n    if (this.column.headerClass) {\n      if (typeof this.column.headerClass === 'string') {\n        cls += ' ' + this.column.headerClass;\n      } else if (typeof this.column.headerClass === 'function') {\n        const res = this.column.headerClass({\n          column: this.column\n        });\n\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    const sortDir = this.sortDir;\n    if (sortDir) {\n      cls += ` sort-active sort-${sortDir}`;\n    }\n\n    return cls;\n  }\n\n  @HostBinding('attr.title')\n  get name(): string {\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n    return this.column.headerTemplate === undefined ? this.column.name : undefined;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  get isCheckboxable(): boolean {\n    return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n  }\n\n  sortFn = this.onSort.bind(this);\n  sortClass: string;\n  sortDir: SortDirection;\n  selectFn = this.select.emit.bind(this.select);\n\n  cellContext: any = {\n    column: this.column,\n    sortDir: this.sortDir,\n    sortFn: this.sortFn,\n    allRowsSelected: this.allRowsSelected,\n    selectFn: this.selectFn\n  };\n\n  private _column: TableColumn;\n  private _sorts: any[];\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.columnContextmenu.emit({ event: $event, column: this.column });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (sorts && this.column) {\n      const sort = sorts.find((s: any) => {\n        return s.prop === this.column.prop;\n      });\n\n      if (sort) return sort.dir;\n    }\n  }\n\n  onSort(): void {\n    if (!this.column.sortable) return;\n\n    const newValue = nextSortDir(this.sortType, this.sortDir);\n    this.sort.emit({\n      column: this.column,\n      prevValue: this.sortDir,\n      newValue\n    });\n  }\n\n  calcSortClass(sortDir: SortDirection): string {\n    if (sortDir === SortDirection.asc) {\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n    } else if (sortDir === SortDirection.desc) {\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n    } else {\n      return `sort-btn`;\n    }\n  }\n}\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy, Input, TemplateRef } from '@angular/core';\nimport { DatatableFooterDirective } from './footer.directive';\n@Component({\n  selector: 'datatable-footer',\n  template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n  host: {\n    class: 'datatable-footer'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableFooterComponent {\n  @Input() footerHeight: number;\n  @Input() rowCount: number;\n  @Input() pageSize: number;\n  @Input() offset: number;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n  @Input() totalMessage: string;\n  @Input() footerTemplate: DatatableFooterDirective;\n\n  @Input() selectedCount: number = 0;\n  @Input() selectedMessage: string | boolean;\n\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  get isVisible(): boolean {\n    return this.rowCount / this.pageSize > 1;\n  }\n\n  get curPage(): number {\n    return this.offset + 1;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n  host: {\n    class: 'datatable-pager'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTablePagerComponent {\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input()\n  set size(val: number) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set count(val: number) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n\n  get count(): number {\n    return this._count;\n  }\n\n  @Input()\n  set page(val: number) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  _count: number = 0;\n  _page: number = 1;\n  _size: number = 0;\n  pages: any;\n\n  canPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  canNext(): boolean {\n    return this.page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this.page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this.page + 1);\n  }\n\n  selectPage(page: number): void {\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\n      this.page = page;\n\n      this.change.emit({\n        page\n      });\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = page - Math.floor(maxSize / 2);\n      endPage = page + Math.floor(maxSize / 2);\n\n      if (startPage < 1) {\n        startPage = 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      } else if (endPage > this.totalPages) {\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\n        endPage = this.totalPages;\n      }\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: <string>(<any>num)\n      });\n    }\n\n    return pages;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-progress',\n  template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressBarComponent {}\n","export enum Keys {\n  up = 38,\n  down = 40,\n  return = 13,\n  escape = 27,\n  left = 37,\n  right = 39\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ElementRef,\n  Output,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  DoCheck,\n  SkipSelf\n} from '@angular/core';\n\nimport { TreeStatus } from './body-cell.component';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { Keys } from '../../utils/keys';\nimport { ScrollbarHelper } from '../../services/scrollbar-helper.service';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body-row',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n})\nexport class DataTableBodyRowComponent implements DoCheck {\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    this.recalculateColumns(val);\n    this.buildStylesByGroup();\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set innerWidth(val: number) {\n    if (this._columns) {\n      const colByPin = columnsByPin(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n    }\n\n    this._innerWidth = val;\n    this.recalculateColumns();\n    this.buildStylesByGroup();\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() expanded: boolean;\n  @Input() rowClass: any;\n  @Input() row: any;\n  @Input() group: any;\n  @Input() isSelected: boolean;\n  @Input() rowIndex: number;\n  @Input() displayCheck: any;\n  @Input() treeStatus: TreeStatus = 'collapsed';\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.buildStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @HostBinding('class')\n  get cssClass() {\n    let cls = 'datatable-body-row';\n    if (this.isSelected) {\n      cls += ' active';\n    }\n    if (this.rowIndex % 2 !== 0) {\n      cls += ' datatable-row-odd';\n    }\n    if (this.rowIndex % 2 === 0) {\n      cls += ' datatable-row-even';\n    }\n\n    if (this.rowClass) {\n      const res = this.rowClass(this.row);\n      if (typeof res === 'string') {\n        cls += ` ${res}`;\n      } else if (typeof res === 'object') {\n        const keys = Object.keys(res);\n        for (const k of keys) {\n          if (res[k] === true) {\n            cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  rowHeight: number;\n\n  @HostBinding('style.width.px')\n  get columnsTotalWidths(): string {\n    return this._columnGroupWidths.total;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  _element: any;\n  _columnGroupWidths: any;\n  _columnsByPin: any;\n  _offsetX: number;\n  _columns: any[];\n  _innerWidth: number;\n  _groupStyles: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private _rowDiffer: KeyValueDiffer<{}, {}>;\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef\n  ) {\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this._rowDiffer.diff(this.row)) {\n      this.cd.markForCheck();\n    }\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  buildStylesByGroup() {\n    this._groupStyles.left = this.calcStylesByGroup('left');\n    this._groupStyles.center = this.calcStylesByGroup('center');\n    this._groupStyles.right = this.calcStylesByGroup('right');\n    this.cd.markForCheck();\n  }\n\n  calcStylesByGroup(group: string) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  onActivate(event: any, index: number): void {\n    event.cellIndex = index;\n    event.rowElement = this._element;\n    this.activate.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetRow = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetRow) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseenter(event: any): void {\n    this.activate.emit({\n      type: 'mouseenter',\n      event,\n      row: this.row,\n      rowElement: this._element\n    });\n  }\n\n  recalculateColumns(val: any[] = this.columns): void {\n    this._columns = val;\n    const colsByPin = columnsByPin(this._columns);\n    this._columnsByPin = columnsByPinArr(this._columns);\n    this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n  }\n\n  onTreeAction() {\n    this.treeAction.emit();\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  DoCheck,\n  ChangeDetectionStrategy,\n  KeyValueDiffer,\n  ChangeDetectorRef,\n  KeyValueDiffers\n} from '@angular/core';\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'datatable-row-wrapper',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || (!groupHeader || !groupHeader.template)\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n  host: {\n    class: 'datatable-row-wrapper'\n  }\n})\nexport class DataTableRowWrapperComponent implements DoCheck {\n  @Input() innerWidth: number;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() offsetX: number;\n  @Input() detailRowHeight: any;\n  @Input() row: any;\n  @Input() groupedRows: any;\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.rowContext.rowIndex = val;\n    this.groupContext.rowIndex = val;\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.groupContext.expanded = val;\n    this.rowContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  groupContext: any = {\n    group: this.row,\n    expanded: this.expanded,\n    rowIndex: this.rowIndex\n  };\n\n  rowContext: any = {\n    row: this.row,\n    expanded: this.expanded,\n    rowIndex: this.rowIndex\n  };\n\n  private rowDiffer: KeyValueDiffer<{}, {}>;\n  private _expanded: boolean = false;\n  private _rowIndex: number;\n\n  constructor(private cd: ChangeDetectorRef, private differs: KeyValueDiffers) {\n    this.rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.row)) {\n      this.rowContext.row = this.row;\n      this.groupContext.group = this.row;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.rowContextmenu.emit({ event: $event, row: this.row });\n  }\n\n  getGroupHeaderStyle(): any {\n    const styles = {};\n\n    styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n    styles['backface-visibility'] = 'hidden';\n    styles['width'] = this.innerWidth;\n\n    return styles;\n  }\n}\n","import {\n  Component,\n  Input,\n  PipeTransform,\n  HostBinding,\n  ViewChild,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  ViewContainerRef,\n  OnDestroy,\n  DoCheck,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { TableColumn } from '../../types/table-column.type';\nimport { MouseEvent, KeyboardEvent } from '../../events';\nimport { SortDirection } from '../../types/sort-direction.type';\nimport { Keys } from '../../utils/keys';\n\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\n\n@Component({\n  selector: 'datatable-body-cell',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n})\nexport class DataTableBodyCellComponent implements DoCheck, OnDestroy {\n  @Input() displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;\n\n  @Input() set group(group: any) {\n    this._group = group;\n    this.cellContext.group = group;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  @Input() set rowHeight(val: number) {\n    this._rowHeight = val;\n    this.cellContext.rowHeight = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowHeight() {\n    return this._rowHeight;\n  }\n\n  @Input() set isSelected(val: boolean) {\n    this._isSelected = val;\n    this.cellContext.isSelected = val;\n    this.cd.markForCheck();\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.cellContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.cellContext.rowIndex = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @Input() set row(row: any) {\n    this._row = row;\n    this.cellContext.row = row;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get row(): any {\n    return this._row;\n  }\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.calcSortDir = this.calcSortDir(val);\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Input() set treeStatus(status: TreeStatus) {\n    if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n      this._treeStatus = 'collapsed';\n    } else {\n      this._treeStatus = status;\n    }\n    this.cellContext.treeStatus = this._treeStatus;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get treeStatus(): TreeStatus {\n    return this._treeStatus;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('cellTemplate', { read: ViewContainerRef, static: true })\n  cellTemplate: ViewContainerRef;\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-body-cell';\n    if (this.column.cellClass) {\n      if (typeof this.column.cellClass === 'string') {\n        cls += ' ' + this.column.cellClass;\n      } else if (typeof this.column.cellClass === 'function') {\n        const res = this.column.cellClass({\n          row: this.row,\n          group: this.group,\n          column: this.column,\n          value: this.value,\n          rowHeight: this.rowHeight\n        });\n\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) {\n              cls += ` ${k}`;\n            }\n          }\n        }\n      }\n    }\n    if (!this.sortDir) {\n      cls += ' sort-active';\n    }\n    if (this.isFocused) {\n      cls += ' active';\n    }\n    if (this.sortDir === SortDirection.asc) {\n      cls += ' sort-asc';\n    }\n    if (this.sortDir === SortDirection.desc) {\n      cls += ' sort-desc';\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.height')\n  get height(): string | number {\n    const height = this.rowHeight;\n    if (isNaN(height)) {\n      return height;\n    }\n    return height + 'px';\n  }\n\n  sanitizedValue: any;\n  value: any;\n  sortDir: SortDirection;\n  isFocused = false;\n  onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n  activateFn = this.activate.emit.bind(this.activate);\n\n  cellContext: any = {\n    onCheckboxChangeFn: this.onCheckboxChangeFn,\n    activateFn: this.activateFn,\n    row: this.row,\n    group: this.group,\n    value: this.value,\n    column: this.column,\n    rowHeight: this.rowHeight,\n    isSelected: this.isSelected,\n    rowIndex: this.rowIndex,\n    treeStatus: this.treeStatus,\n    onTreeAction: this.onTreeAction.bind(this)\n  };\n\n  private _isSelected: boolean;\n  private _sorts: any[];\n  private _column: TableColumn;\n  private _row: any;\n  private _group: any;\n  private _rowHeight: number;\n  private _rowIndex: number;\n  private _expanded: boolean;\n  private _element: any;\n  private _treeStatus: TreeStatus;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\n    this._element = element.nativeElement;\n  }\n\n  ngDoCheck(): void {\n    this.checkValueUpdates();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cellTemplate) {\n      this.cellTemplate.clear();\n    }\n  }\n\n  checkValueUpdates(): void {\n    let value = '';\n\n    if (!this.row || !this.column) {\n      value = '';\n    } else {\n      const val = this.column.$$valueGetter(this.row, this.column.prop);\n      const userPipe: PipeTransform = this.column.pipe;\n\n      if (userPipe) {\n        value = userPipe.transform(val);\n      } else if (value !== undefined) {\n        value = val;\n      }\n    }\n\n    if (this.value !== value) {\n      this.value = value;\n      this.cellContext.value = value;\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus(): void {\n    this.isFocused = true;\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.isFocused = false;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'click',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDblClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'dblclick',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetCell = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetCell) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }\n\n  onCheckboxChange(event: any): void {\n    this.activate.emit({\n      type: 'checkbox',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element,\n      treeStatus: 'collapsed'\n    });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (!sorts) {\n      return;\n    }\n\n    const sort = sorts.find((s: any) => {\n      return s.prop === this.column.prop;\n    });\n\n    if (sort) {\n      return sort.dir;\n    }\n  }\n\n  stripHtml(html: string): string {\n    if (!html.replace) {\n      return html;\n    }\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\n  }\n\n  onTreeAction() {\n    this.treeAction.emit(this.row);\n  }\n\n  calcLeftMargin(column: any, row: any) {\n    const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n    return column.isTreeColumn ? row.level * levelIndent : 0;\n  }\n}\n","export function selectRows(selected: any[], row: any, comparefn: any) {\n  const selectedIndex = comparefn(row, selected);\n\n  if (selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nexport function selectRowsBetween(\n  selected: any[],\n  rows: any[],\n  index: number,\n  prevIndex: number,\n  comparefn: any\n): any[] {\n  const reverse = index < prevIndex;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n\n    let range = { start: 0, end: 0 };\n    if (reverse) {\n      range = {\n        start: index,\n        end: prevIndex\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if ((reverse && lesser) || (!reverse && greater)) {\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if (i >= range.start && i <= range.end) {\n        selected.push(row);\n      }\n    }\n  }\n\n  return selected;\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { SelectionType } from '../../types/selection.type';\nimport { selectRowsBetween, selectRows } from '../../utils/selection';\nimport { Keys } from '../../utils/keys';\n\nexport interface Model {\n  type: string;\n  event: MouseEvent | KeyboardEvent;\n  row: any;\n  rowElement: any;\n  cellElement: any;\n  cellIndex: number;\n}\n\n@Component({\n  selector: 'datatable-selection',\n  template: `\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableSelectionComponent {\n  @Input() rows: any[];\n  @Input() selected: any[];\n  @Input() selectEnabled: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() rowIdentity: any;\n  @Input() selectCheck: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  prevIndex: number;\n\n  selectRow(event: KeyboardEvent | MouseEvent, index: number, row: any): void {\n    if (!this.selectEnabled) return;\n\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const multi = this.selectionType === SelectionType.multi;\n    const multiClick = this.selectionType === SelectionType.multiClick;\n    let selected: any[] = [];\n\n    if (multi || chkbox || multiClick) {\n      if (event.shiftKey) {\n        selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n        selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n      } else {\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n      }\n    } else {\n      selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n    }\n\n    if (typeof this.selectCheck === 'function') {\n      selected = selected.filter(this.selectCheck.bind(this));\n    }\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    this.prevIndex = index;\n\n    this.select.emit({\n      selected\n    });\n  }\n\n  onActivate(model: Model, index: number): void {\n    const { type, event, row } = model;\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n\n    if (select) {\n      this.selectRow(event, index, row);\n    } else if (type === 'keydown') {\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\n        this.selectRow(event, index, row);\n      } else {\n        this.onKeyboardFocus(model);\n      }\n    }\n    this.activate.emit(model);\n  }\n\n  onKeyboardFocus(model: Model): void {\n    const { keyCode } = <KeyboardEvent>model.event;\n    const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n\n    if (shouldFocus) {\n      const isCellSelection = this.selectionType === SelectionType.cell;\n\n      if (!model.cellElement || !isCellSelection) {\n        this.focusRow(model.rowElement, keyCode);\n      } else if (isCellSelection) {\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n      }\n    }\n  }\n\n  focusRow(rowElement: any, keyCode: number): void {\n    const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n    if (nextRowElement) nextRowElement.focus();\n  }\n\n  getPrevNextRow(rowElement: any, keyCode: number): any {\n    const parentElement = rowElement.parentElement;\n\n    if (parentElement) {\n      let focusElement: HTMLElement;\n      if (keyCode === Keys.up) {\n        focusElement = parentElement.previousElementSibling;\n      } else if (keyCode === Keys.down) {\n        focusElement = parentElement.nextElementSibling;\n      }\n\n      if (focusElement && focusElement.children.length) {\n        return focusElement.children[0];\n      }\n    }\n  }\n\n  focusCell(cellElement: any, rowElement: any, keyCode: number, cellIndex: number): void {\n    let nextCellElement: HTMLElement;\n\n    if (keyCode === Keys.left) {\n      nextCellElement = cellElement.previousElementSibling;\n    } else if (keyCode === Keys.right) {\n      nextCellElement = cellElement.nextElementSibling;\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n      if (nextRowElement) {\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n        if (children.length) nextCellElement = children[cellIndex];\n      }\n    }\n\n    if (nextCellElement) nextCellElement.focus();\n  }\n\n  getRowSelected(row: any): boolean {\n    return this.getRowSelectedIdx(row, this.selected) > -1;\n  }\n\n  getRowSelectedIdx(row: any, selected: any[]): number {\n    if (!selected || !selected.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return selected.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n}\n","import { Component, Input, OnChanges, PipeTransform, TemplateRef } from '@angular/core';\n\nexport interface ISummaryColumn {\n  summaryFunc?: (cells: any[]) => any;\n  summaryTemplate?: TemplateRef<any>;\n\n  prop: string;\n  pipe?: PipeTransform;\n}\n\nfunction defaultSumFunc(cells: any[]): any {\n  const cellsWithValues = cells.filter(cell => !!cell);\n\n  if (!cellsWithValues.length) {\n    return null;\n  }\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\n    return null;\n  }\n\n  return cellsWithValues.reduce((res, cell) => res + cell);\n}\n\nfunction noopSumFunc(cells: any[]): void {\n  return null;\n}\n\n@Component({\n  selector: 'datatable-summary-row',\n  template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n  host: {\n    class: 'datatable-summary-row'\n  }\n})\nexport class DataTableSummaryRowComponent implements OnChanges {\n  @Input() rows: any[];\n  @Input() columns: ISummaryColumn[];\n\n  @Input() rowHeight: number;\n  @Input() offsetX: number;\n  @Input() innerWidth: number;\n\n  _internalColumns: ISummaryColumn[];\n  summaryRow: any = {};\n\n  ngOnChanges() {\n    if (!this.columns || !this.rows) {\n      return;\n    }\n    this.updateInternalColumns();\n    this.updateValues();\n  }\n\n  private updateInternalColumns() {\n    this._internalColumns = this.columns.map(col => ({\n      ...col,\n      cellTemplate: col.summaryTemplate\n    }));\n  }\n\n  private updateValues() {\n    this.summaryRow = {};\n\n    this.columns\n      .filter(col => !col.summaryTemplate)\n      .forEach(col => {\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\n        const sumFunc = this.getSummaryFunction(col);\n\n        this.summaryRow[col.prop] = col.pipe\n          ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n          : sumFunc(cellsFromSingleColumn);\n      });\n  }\n\n  private getSummaryFunction(column: ISummaryColumn): (a: any[]) => any {\n    if (column.summaryFunc === undefined) {\n      return defaultSumFunc;\n    } else if (column.summaryFunc === null) {\n      return noopSumFunc;\n    } else {\n      return column.summaryFunc;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollbarHelper } from './services/scrollbar-helper.service';\nimport { DimensionsHelper } from './services/dimensions-helper.service';\nimport { ColumnChangesService } from './services/column-changes.service';\nimport { DataTableFooterTemplateDirective } from './components/footer/footer-template.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { ResizeableDirective } from './directives/resizeable.directive';\nimport { OrderableDirective } from './directives/orderable.directive';\nimport { LongPressDirective } from './directives/long-press.directive';\nimport { ScrollerComponent } from './components/body/scroller.component';\nimport { DatatableComponent } from './components/datatable.component';\nimport { DataTableColumnDirective } from './components/columns/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTableHeaderCellComponent } from './components/header/header-cell.component';\nimport { DataTableBodyComponent } from './components/body/body.component';\nimport { DataTableFooterComponent } from './components/footer/footer.component';\nimport { DataTablePagerComponent } from './components/footer/pager.component';\nimport { ProgressBarComponent } from './components/body/progress-bar.component';\nimport { DataTableBodyRowComponent } from './components/body/body-row.component';\nimport { DataTableRowWrapperComponent } from './components/body/body-row-wrapper.component';\nimport { DatatableRowDetailDirective } from './components/row-detail/row-detail.directive';\nimport { DatatableGroupHeaderDirective } from './components/body/body-group-header.directive';\nimport { DatatableRowDetailTemplateDirective } from './components/row-detail/row-detail-template.directive';\nimport { DataTableBodyCellComponent } from './components/body/body-cell.component';\nimport { DataTableSelectionComponent } from './components/body/selection.component';\nimport { DataTableColumnHeaderDirective } from './components/columns/column-header.directive';\nimport { DataTableColumnCellDirective } from './components/columns/column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './components/columns/tree.directive';\nimport { DatatableFooterDirective } from './components/footer/footer.directive';\nimport { DatatableGroupHeaderTemplateDirective } from './components/body/body-group-header-template.directive';\nimport { DataTableSummaryRowComponent } from './components/body/summary/summary-row.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n  declarations: [\n    DataTableFooterTemplateDirective,\n    VisibilityDirective,\n    DraggableDirective,\n    ResizeableDirective,\n    OrderableDirective,\n    LongPressDirective,\n    ScrollerComponent,\n    DatatableComponent,\n    DataTableColumnDirective,\n    DataTableHeaderComponent,\n    DataTableHeaderCellComponent,\n    DataTableBodyComponent,\n    DataTableFooterComponent,\n    DataTablePagerComponent,\n    ProgressBarComponent,\n    DataTableBodyRowComponent,\n    DataTableRowWrapperComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableBodyCellComponent,\n    DataTableSelectionComponent,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DatatableFooterDirective,\n    DatatableGroupHeaderTemplateDirective,\n    DataTableSummaryRowComponent\n  ],\n  exports: [\n    DatatableComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableColumnDirective,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DataTableFooterTemplateDirective,\n    DatatableFooterDirective,\n    DataTablePagerComponent,\n    DatatableGroupHeaderTemplateDirective\n  ]\n})\nexport class NgxDatatableModule {\n  /**\n   * Configure global configuration via INgxDatatableConfig\n   * @param configuration\n   */\n  static forRoot(configuration: INgxDatatableConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxDatatableModule,\n      providers: [{ provide: 'configuration', useValue: configuration }]\n    };\n  }\n}\n\n/**\n * Interface definition for INgxDatatableConfig global configuration\n */\nexport interface INgxDatatableConfig {\n  messages: {\n    emptyMessage: string; // Message to show when array is presented, but contains no values\n    totalMessage: string; // Footer total message\n    selectedMessage: string; // Footer selected message\n  };\n}\n","export enum ClickType {\n  single = 'single',\n  double = 'double'\n}\n","import { PipeTransform } from '@angular/core';\nimport { ValueGetter } from '../utils/column-prop-getters';\n\n/**\n * Column property that indicates how to retrieve this column's\n * value from a row.\n * 'a.deep.value', 'normalprop', 0 (numeric)\n */\nexport type TableColumnProp = string | number;\n\n/**\n * Column Type\n */\nexport interface TableColumn {\n  /**\n   * Internal unique id\n   *\n   * @memberOf TableColumn\n   */\n  $$id?: string;\n\n  /**\n   * Internal for column width distributions\n   *\n   * @memberOf TableColumn\n   */\n  $$oldWidth?: number;\n\n  /**\n   * Internal for setColumnDefaults\n   *\n   * @memberOf TableColumn\n   */\n  $$valueGetter?: ValueGetter;\n\n  /**\n   * Determines if column is checkbox\n   *\n   * @memberOf TableColumn\n   */\n  checkboxable?: boolean;\n\n  /**\n   * Determines if the column is frozen to the left\n   *\n   * @memberOf TableColumn\n   */\n  frozenLeft?: boolean;\n\n  /**\n   * Determines if the column is frozen to the right\n   *\n   * @memberOf TableColumn\n   */\n  frozenRight?: boolean;\n\n  /**\n   * The grow factor relative to other columns. Same as the flex-grow\n   * API from http =//www.w3.org/TR/css3-flexbox/. Basically;\n   * take any available extra width and distribute it proportionally\n   * according to all columns' flexGrow values.\n   *\n   * @memberOf TableColumn\n   */\n  flexGrow?: number;\n\n  /**\n   * Min width of the column\n   *\n   * @memberOf TableColumn\n   */\n  minWidth?: number;\n\n  /**\n   * Max width of the column\n   *\n   * @memberOf TableColumn\n   */\n  maxWidth?: number;\n\n  /**\n   * The default width of the column, in pixels\n   *\n   * @memberOf TableColumn\n   */\n  width?: number;\n\n  /**\n   * Can the column be resized\n   *\n   * @memberOf TableColumn\n   */\n  resizeable?: boolean;\n\n  /**\n   * Custom sort comparator\n   *\n   * @memberOf TableColumn\n   */\n  comparator?: any;\n\n  /**\n   * Custom pipe transforms\n   *\n   * @memberOf TableColumn\n   */\n  pipe?: PipeTransform;\n\n  /**\n   * Can the column be sorted\n   *\n   * @memberOf TableColumn\n   */\n  sortable?: boolean;\n\n  /**\n   * Can the column be re-arranged by dragging\n   *\n   * @memberOf TableColumn\n   */\n  draggable?: boolean;\n\n  /**\n   * Whether the column can automatically resize to fill space in the table.\n   *\n   * @memberOf TableColumn\n   */\n  canAutoResize?: boolean;\n\n  /**\n   * Column name or label\n   *\n   * @memberOf TableColumn\n   */\n  name?: string;\n\n  /**\n   * Property to bind to the row. Example:\n   *\n   * `someField` or `some.field.nested`, 0 (numeric)\n   *\n   * If left blank, will use the name as camel case conversion\n   *\n   * @memberOf TableColumn\n   */\n  prop?: TableColumnProp;\n\n  /**\n   * Cell template ref\n   *\n   * @memberOf TableColumn\n   */\n  cellTemplate?: any;\n\n  /**\n   * Header template ref\n   *\n   * @memberOf TableColumn\n   */\n  headerTemplate?: any;\n\n  /**\n   * Tree toggle template ref\n   *\n   * @memberOf TableColumn\n   */\n  treeToggleTemplate?: any;\n\n  /**\n   * CSS Classes for the cell\n   *\n   *\n   * @memberOf TableColumn\n   */\n  cellClass?: string | ((data: any) => string | any);\n\n  /**\n   * CSS classes for the header\n   *\n   *\n   * @memberOf TableColumn\n   */\n  headerClass?: string | ((data: any) => string | any);\n\n  /**\n   * Header checkbox enabled\n   *\n   * @memberOf TableColumn\n   */\n  headerCheckboxable?: boolean;\n\n  /**\n   * Is tree displayed on this column\n   *\n   * @memberOf TableColumn\n   */\n  isTreeColumn?: boolean;\n\n  /**\n   * Width of the tree level indent\n   *\n   * @memberOf TableColumn\n   */\n  treeLevelIndent?: number;\n\n  /**\n   * Summary function\n   *\n   * @memberOf TableColumn\n   */\n  summaryFunc?: (cells: any[]) => any;\n\n  /**\n   * Summary cell template ref\n   *\n   * @memberOf TableColumn\n   */\n  summaryTemplate?: any;\n}\n","import { SortDirection } from './sort-direction.type';\nimport { TableColumnProp } from './table-column.type';\n\nexport interface SortPropDir {\n  dir: SortDirection;\n  prop: TableColumnProp;\n}\n","if (typeof document !== 'undefined' && !document.elementsFromPoint) {\n  document.elementsFromPoint = elementsFromPoint;\n}\n\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\nexport function elementsFromPoint(x: number, y: number) {\n  const elements = [];\n  const previousPointerEvents = [];\n  let current: any; // TODO: window.getComputedStyle should be used with inferred type (Element)\n  let i;\n  let d;\n\n  //if (document === undefined) return elements;\n\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n    // push the element and its current style\n    elements.push(current);\n    previousPointerEvents.push({\n      value: current.style.getPropertyValue('pointer-events'),\n      priority: current.style.getPropertyPriority('pointer-events')\n    });\n\n    // add \"pointer-events: none\", to get to the underlying element\n    current.style.setProperty('pointer-events', 'none', 'important');\n  }\n\n  // restore the previous pointer-events values\n  for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]); ) {\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n  }\n\n  // return our results\n  return elements;\n}\n/*tslint:enable*/\n"]}